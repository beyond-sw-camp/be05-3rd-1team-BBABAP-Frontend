{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7239ca2b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"즐겨찾기 주유소 목록\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"favorite-stations-list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.favoriteStations, (station, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"favorite-station-item\"\n    }, [_createCommentVNode(\" 즐겨찾기 주유소 목록을 표시하는 코드 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"h3\", null, _toDisplayString(station.place_name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(station.address_name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(station.phone), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeFavoriteStation(index)\n    }, \"제거\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","favoriteStations","station","index","key","_createCommentVNode","_toDisplayString","place_name","address_name","phone","onClick","$event","$options","removeFavoriteStation","_hoisted_3"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\components\\FavoriteStations.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>즐겨찾기 주유소 목록</h1>\r\n      <ul class=\"favorite-stations-list\">\r\n        <li v-for=\"(station, index) in favoriteStations\" :key=\"index\" class=\"favorite-station-item\">\r\n          <!-- 즐겨찾기 주유소 목록을 표시하는 코드 -->\r\n          <div>\r\n            <h3>{{ station.place_name }}</h3>\r\n            <p>{{ station.address_name }}</p>\r\n            <p>{{ station.phone }}</p>\r\n            <button @click=\"removeFavoriteStation(index)\">제거</button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'FavoriteStations',\r\n    data() {\r\n      return {\r\n        favoriteStations: [] // 즐겨찾기 주유소 목록을 저장할 배열\r\n      };\r\n    },\r\n    mounted() {\r\n      // 서버로부터 즐겨찾기 주유소 목록을 가져오는 메서드 호출\r\n      this.getFavoriteStations();\r\n    },\r\n    methods: {\r\n      // 서버로부터 즐겨찾기 주유소 목록을 가져오는 메서드\r\n      async getFavoriteStations() {\r\n        try {\r\n          const response = await fetch('http://localhost:3000/favorites');\r\n          const data = await response.json();\r\n          this.favoriteStations = data;\r\n        } catch (error) {\r\n          console.error('Error fetching favorite stations:', error);\r\n        }\r\n      },\r\n      async removeFavoriteStation(index) {\r\n        try {\r\n          const station = this.favoriteStations[index];\r\n          const response = await fetch(`http://localhost:3000/favorites/${station.id}`, {\r\n            method: 'DELETE'\r\n          });\r\n          if (response.ok) {\r\n            this.favoriteStations.splice(index, 1);\r\n          } else {\r\n            console.error('Failed to remove favorite station');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error removing favorite station:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .favorite-stations-list {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .favorite-station-item {\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n  }\r\n  \r\n  .favorite-station-item div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .favorite-station-item h3 {\r\n    margin: 0;\r\n  }\r\n  \r\n  .favorite-station-item button {\r\n    background-color: #dc3545;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .favorite-station-item button:hover {\r\n    background-color: #c82333;\r\n  }\r\n  </style>\r\n  "],"mappings":";;gEAEMA,mBAAA,CAAoB,YAAhB,aAAW;;EACXC,KAAK,EAAC;AAAwB;mBAHxC;;uBACIC,mBAAA,CAaM,cAZJC,UAAoB,EACpBH,mBAAA,CAUK,MAVLI,UAUK,I,kBATHF,mBAAA,CAQKG,SAAA,QAZbC,WAAA,CAIuCC,KAAA,CAAAC,gBAAgB,EAJvD,CAIoBC,OAAO,EAAEC,KAAK;yBAA1BR,mBAAA,CAQK;MAR6CS,GAAG,EAAED,KAAK;MAAET,KAAK,EAAC;QAClEW,mBAAA,0BAA6B,EAC7BZ,mBAAA,CAKM,cAJJA,mBAAA,CAAiC,YAAAa,gBAAA,CAA1BJ,OAAO,CAACK,UAAU,kBACzBd,mBAAA,CAAiC,WAAAa,gBAAA,CAA3BJ,OAAO,CAACM,YAAY,kBAC1Bf,mBAAA,CAA0B,WAAAa,gBAAA,CAApBJ,OAAO,CAACO,KAAK,kBACnBhB,mBAAA,CAAyD;MAAhDiB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,qBAAqB,CAACV,KAAK;OAAG,IAAE,iBAV5DW,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}