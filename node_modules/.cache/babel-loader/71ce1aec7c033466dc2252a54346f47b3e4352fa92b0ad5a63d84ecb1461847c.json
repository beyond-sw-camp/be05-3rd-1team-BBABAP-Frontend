{"ast":null,"code":"export default {\n  name: 'FavoriteStations',\n  data() {\n    return {\n      favoriteStations: [] // 즐겨찾기 주유소 목록을 저장할 배열\n    };\n  },\n  mounted() {\n    // 서버로부터 즐겨찾기 주유소 목록을 가져오는 메서드 호출\n    this.getFavoriteStations();\n  },\n  methods: {\n    // 서버로부터 즐겨찾기 주유소 목록을 가져오는 메서드\n    async getFavoriteStations() {\n      try {\n        const response = await fetch('http://localhost:3000/favorites');\n        const data = await response.json();\n        this.favoriteStations = data;\n      } catch (error) {\n        console.error('Error fetching favorite stations:', error);\n      }\n    },\n    async removeFavoriteStation(index) {\n      try {\n        const station = this.favoriteStations[index];\n        const response = await fetch(`http://localhost:3000/favorites/${station.id}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          this.favoriteStations.splice(index, 1);\n        } else {\n          console.error('Failed to remove favorite station');\n        }\n      } catch (error) {\n        console.error('Error removing favorite station:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","favoriteStations","mounted","getFavoriteStations","methods","response","fetch","json","error","console","removeFavoriteStation","index","station","id","method","ok","splice"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\components\\FavoriteStations.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>즐겨찾기 주유소 목록</h1>\r\n      <ul class=\"favorite-stations-list\">\r\n        <li v-for=\"(station, index) in favoriteStations\" :key=\"index\" class=\"favorite-station-item\">\r\n          <!-- 즐겨찾기 주유소 목록을 표시하는 코드 -->\r\n          <div>\r\n            <h3>{{ station.place_name }}</h3>\r\n            <p>{{ station.address_name }}</p>\r\n            <p>{{ station.phone }}</p>\r\n            <button @click=\"removeFavoriteStation(index)\">제거</button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'FavoriteStations',\r\n    data() {\r\n      return {\r\n        favoriteStations: [] // 즐겨찾기 주유소 목록을 저장할 배열\r\n      };\r\n    },\r\n    mounted() {\r\n      // 서버로부터 즐겨찾기 주유소 목록을 가져오는 메서드 호출\r\n      this.getFavoriteStations();\r\n    },\r\n    methods: {\r\n      // 서버로부터 즐겨찾기 주유소 목록을 가져오는 메서드\r\n      async getFavoriteStations() {\r\n        try {\r\n          const response = await fetch('http://localhost:3000/favorites');\r\n          const data = await response.json();\r\n          this.favoriteStations = data;\r\n        } catch (error) {\r\n          console.error('Error fetching favorite stations:', error);\r\n        }\r\n      },\r\n      async removeFavoriteStation(index) {\r\n        try {\r\n          const station = this.favoriteStations[index];\r\n          const response = await fetch(`http://localhost:3000/favorites/${station.id}`, {\r\n            method: 'DELETE'\r\n          });\r\n          if (response.ok) {\r\n            this.favoriteStations.splice(index, 1);\r\n          } else {\r\n            console.error('Failed to remove favorite station');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error removing favorite station:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .favorite-stations-list {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .favorite-station-item {\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n  }\r\n  \r\n  .favorite-station-item div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .favorite-station-item h3 {\r\n    margin: 0;\r\n  }\r\n  \r\n  .favorite-station-item button {\r\n    background-color: #dc3545;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .favorite-station-item button:hover {\r\n    background-color: #c82333;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAkBE,eAAe;EACbA,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EAAC,CAAE;IACvB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMD,mBAAmBA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,MAAMN,IAAG,GAAI,MAAMK,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,IAAI,CAACN,gBAAe,GAAID,IAAI;MAC9B,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IACD,MAAME,qBAAqBA,CAACC,KAAK,EAAE;MACjC,IAAI;QACF,MAAMC,OAAM,GAAI,IAAI,CAACX,gBAAgB,CAACU,KAAK,CAAC;QAC5C,MAAMN,QAAO,GAAI,MAAMC,KAAK,CAAE,mCAAkCM,OAAO,CAACC,EAAG,EAAC,EAAE;UAC5EC,MAAM,EAAE;QACV,CAAC,CAAC;QACF,IAAIT,QAAQ,CAACU,EAAE,EAAE;UACf,IAAI,CAACd,gBAAgB,CAACe,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;QACxC,OAAO;UACLF,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAC;QACpD;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}