{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      boards: [],\n      currentPage: 1,\n      perPage: 10\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.boards.length / this.perPage);\n    },\n    displayedBoards() {\n      const startIndex = (this.currentPage - 1) * this.perPage;\n      const endIndex = this.currentPage * this.perPage;\n      return this.boards.slice(startIndex, endIndex);\n    }\n  },\n  created() {\n    this.fetchBoards();\n  },\n  methods: {\n    fetchBoards() {\n      axios.get('http://localhost:7777/boards').then(response => {\n        this.boards = response.data;\n      }).catch(error => {\n        console.error('Error fetching boards:', error);\n      });\n    },\n    goToPostForm() {\n      this.$router.push('/post/new');\n    },\n    setPage(page) {\n      this.currentPage = page;\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","boards","currentPage","perPage","computed","totalPages","Math","ceil","length","displayedBoards","startIndex","endIndex","slice","created","fetchBoards","methods","get","then","response","catch","error","console","goToPostForm","$router","push","setPage","page","nextPage","prevPage"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\BoardListJsonServer.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <h2>게시물 목록</h2>\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>제목</th>\n            <th>작성자</th>\n            <th>작성일</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"board in displayedBoards\" :key=\"board.id\">\n            <td>{{ board.id }}</td>\n            <td><router-link :to=\"'/board/' + board.id\">{{ board.title }}</router-link></td>\n            <td>{{ board.author }}</td>\n            <td>{{ board.created_date }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"pagination\">\n        <button v-if=\"currentPage > 1\" @click=\"prevPage\" class=\"pagination-btn\">이전</button>\n        <button v-for=\"page in totalPages\" :key=\"page\" @click=\"setPage(page)\" :class=\"{ 'pagination-btn': true, 'active': currentPage === page }\">{{ page }}</button>\n        <button v-if=\"currentPage < totalPages\" @click=\"nextPage\" class=\"pagination-btn\">다음</button>\n      </div>\n      <div style=\"text-align:right\">\n        <button @click=\"goToPostForm\" class=\"add-btn\">게시물 작성하기</button>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        boards: [],\n        currentPage: 1,\n        perPage: 10\n      };\n    },\n    computed: {\n      totalPages() {\n        return Math.ceil(this.boards.length / this.perPage);\n      },\n      displayedBoards() {\n        const startIndex = (this.currentPage - 1) * this.perPage;\n        const endIndex = this.currentPage * this.perPage;\n        return this.boards.slice(startIndex, endIndex);\n      }\n    },\n    created() {\n      this.fetchBoards();\n    },\n    methods: {\n      fetchBoards() {\n        axios.get('http://localhost:7777/boards')\n          .then(response => {\n            this.boards = response.data;\n          })\n          .catch(error => {\n            console.error('Error fetching boards:', error);\n          });\n      },\n      goToPostForm() {\n        this.$router.push('/post/new');\n      },\n      setPage(page) {\n        this.currentPage = page;\n      },\n      nextPage() {\n        if (this.currentPage < this.totalPages) {\n          this.currentPage++;\n        }\n      },\n      prevPage() {\n        if (this.currentPage > 1) {\n          this.currentPage--;\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style>\n  .container {\n    margin: 20px auto;\n    width: 80%;\n  }\n  \n  .table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  \n  .table th, .table td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n  }\n  \n  .table th {\n    background-color: #f2f2f2;\n  }\n  \n  .pagination {\n    margin-top: 20px;\n    text-align: center;\n  }\n  \n  .pagination-btn {\n    background-color: #4CAF50;\n    color: white;\n    padding: 8px 16px;\n    border: none;\n    cursor: pointer;\n  }\n  \n  .pagination-btn:hover {\n    background-color: #45a049;\n  }\n  \n  .active {\n    background-color: #45a049;\n  }\n  \n  .add-btn {\n    background-color: #008CBA;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    cursor: pointer;\n    margin-top: 20px;\n  }\n  \n  .add-btn:hover {\n    background-color: #00698C;\n  }\n  </style>"],"mappings":";AAiCE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACN,MAAM,CAACO,MAAK,GAAI,IAAI,CAACL,OAAO,CAAC;IACrD,CAAC;IACDM,eAAeA,CAAA,EAAG;MAChB,MAAMC,UAAS,GAAI,CAAC,IAAI,CAACR,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,OAAO;MACxD,MAAMQ,QAAO,GAAI,IAAI,CAACT,WAAU,GAAI,IAAI,CAACC,OAAO;MAChD,OAAO,IAAI,CAACF,MAAM,CAACW,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;IAChD;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZf,KAAK,CAACiB,GAAG,CAAC,8BAA8B,EACrCC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACjB,MAAK,GAAIiB,QAAQ,CAAClB,IAAI;MAC7B,CAAC,EACAmB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACN,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IACDC,OAAOA,CAACC,IAAI,EAAE;MACZ,IAAI,CAACxB,WAAU,GAAIwB,IAAI;IACzB,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACzB,WAAU,GAAI,IAAI,CAACG,UAAU,EAAE;QACtC,IAAI,CAACH,WAAW,EAAE;MACpB;IACF,CAAC;IACD0B,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAC1B,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}