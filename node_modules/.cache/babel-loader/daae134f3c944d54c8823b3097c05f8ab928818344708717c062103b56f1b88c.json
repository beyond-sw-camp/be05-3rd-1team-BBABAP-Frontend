{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2ceaf9be\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"post-form-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"게시물 작성\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"제목:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"content\"\n}, \"내용:\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submit-button\"\n}, \"작성\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"post-form\"\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.post.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.post.title]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"summernote\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.post.content = $event),\n    placeholder: \"내용을 입력하세요\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.post.content]])]), _hoisted_7], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_3","_hoisted_4","id","$event","$data","post","title","required","_hoisted_5","_hoisted_6","content","placeholder","_hoisted_7"],"sources":["C:\\encore\\vsc_java_workspace\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\PostForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"post-form-container\">\r\n        <h2>게시물 작성</h2>\r\n        <form @submit.prevent=\"submitForm\" class=\"post-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"title\">제목:</label>\r\n                <input type=\"text\" id=\"title\" v-model=\"post.title\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"content\">내용:</label>\r\n                <textarea id=\"summernote\" v-model=\"post.content\" placeholder=\"내용을 입력하세요\"></textarea>\r\n            </div>\r\n            <button type=\"submit\" class=\"submit-button\">작성</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapGetters } from 'vuex';\r\n\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\nimport 'summernote/dist/summernote-lite.css';\r\nimport 'summernote/dist/summernote-lite';\r\n\r\nexport default {\r\n\r\n    computed: {\r\n    // userNickname getter를 가져옴\r\n    ...mapGetters(['userNickname'])\r\n  },\r\n\r\n    data() {\r\n        return {\r\n            post: {\r\n                title: '',\r\n                content: '',\r\n                created_at: '', // 추가: 현재 시간을 저장할 속성,\r\n                created_date:'',\r\n                author: '',\r\n            },\r\n        };\r\n    },\r\n    mounted() {\r\n      // Summernote 초기화\r\n      $('#summernote').summernote({\r\n        height: 300, // 높이 설정 (원하는 대로 조절 가능)\r\n        callbacks: {\r\n          onChange: (contents) => {\r\n            // 내용이 변경될 때마다 데이터에 저장\r\n            this.post.content = contents;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    methods: {\r\n        submitForm() {\r\n            // 현재 시간을 설정\r\n            this.post.created_at = new Date().toISOString();\r\n            this.post.created_date = this.post.created_at.slice(0, 10);\r\n            this.post.author = this.userNickname;\r\n            console.log(this.userNickname);\r\n            \r\n            axios.post('http://localhost:7777/boards', this.post, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(() => {\r\n                this.$router.push('/boardlist');  \r\n            })\r\n            .catch(error => {\r\n                console.error('Error creating post:', error);\r\n            });\r\n        },\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.post-form-container {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n}\r\n\r\n.post-form {\r\n    background-color: #f9f9f9;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.form-group {\r\n    margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n    display: block;\r\n    font-weight: bold;\r\n}\r\n\r\ninput[type=\"text\"],\r\ntextarea {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton.submit-button {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton.submit-button:hover {\r\n    background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAqB;gEAC5BC,mBAAA,CAAe,YAAX,QAAM;;EAEDD,KAAK,EAAC;AAAY;gEACnBC,mBAAA,CAA8B;EAAvBC,GAAG,EAAC;AAAO,GAAC,KAAG;;EAGrBF,KAAK,EAAC;AAAY;gEACnBC,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAS,GAAC,KAAG;gEAG5BD,mBAAA,CAAuD;EAA/CE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAgB,IAAE;;uBAXtDI,mBAAA,CAaM,OAbNC,UAaM,GAZFC,UAAe,EACfL,mBAAA,CAUO;IAVAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHrBC,cAAA,KAAAC,IAAA,KAG+BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEV,KAAK,EAAC;MACrCC,mBAAA,CAGM,OAHNY,UAGM,GAFFC,UAA8B,E,gBAC9Bb,mBAAA,CAA4D;IAArDE,IAAI,EAAC,MAAM;IAACY,EAAE,EAAC,OAAO;IAN7C,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAMuDC,KAAA,CAAAC,IAAI,CAACC,KAAK,GAAAH,MAAA;IAAEI,QAAQ,EAAR;iDAAZH,KAAA,CAAAC,IAAI,CAACC,KAAK,E,KAErDlB,mBAAA,CAGM,OAHNoB,UAGM,GAFFC,UAAgC,E,gBAChCrB,mBAAA,CAAoF;IAA1Ec,EAAE,EAAC,YAAY;IAVzC,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAUmDC,KAAA,CAAAC,IAAI,CAACK,OAAO,GAAAP,MAAA;IAAEQ,WAAW,EAAC;iDAA1BP,KAAA,CAAAC,IAAI,CAACK,OAAO,E,KAEnDE,UAAuD,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}