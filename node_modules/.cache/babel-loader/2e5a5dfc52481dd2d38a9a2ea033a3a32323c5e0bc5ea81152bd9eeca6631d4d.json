{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-81bab0f6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"update-form-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"게시물 수정\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"제목:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"content\"\n}, \"내용:\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submit-button\"\n}, \"수정 완료\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"update-form\"\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.updatedPost.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedPost.title]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"summernote\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.updatedPost.content = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedPost.content]])]), _hoisted_7], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_3","_hoisted_4","id","$event","$data","updatedPost","title","required","_hoisted_5","_hoisted_6","content","_hoisted_7"],"sources":["C:\\encore\\vsc_java_workspace\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\BoardUpdate.vue"],"sourcesContent":["<template>\r\n    <div class=\"update-form-container\">\r\n      <h2>게시물 수정</h2>\r\n      <form @submit.prevent=\"submitForm\" class=\"update-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"title\">제목:</label>\r\n          <input type=\"text\" id=\"title\" v-model=\"updatedPost.title\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"content\">내용:</label>\r\n          <textarea id=\"summernote\" v-model=\"updatedPost.content\" required></textarea>\r\n        </div>\r\n        <button type=\"submit\" class=\"submit-button\">수정 완료</button>\r\n      </form>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\n  import axios from 'axios';\r\n  import { mapGetters } from 'vuex';\r\n  \r\n  import $ from 'jquery';\r\n  import 'bootstrap';\r\n\r\n  import 'summernote/dist/summernote-lite.css';\r\n  import 'summernote/dist/summernote-lite';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        updatedPost: {\r\n          title: '',\r\n          content: ''\r\n        }\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchPost();\r\n    },\r\n    computed: {\r\n      ...mapGetters(['userNickname'])\r\n    },\r\n    mounted() {\r\n      // Summernote 초기화\r\n      $('#summernote').summernote({\r\n        height: 300, // 높이 설정 (원하는 대로 조절 가능)\r\n        callbacks: {\r\n          onChange: (contents) => {\r\n            // 내용이 변경될 때마다 데이터에 저장\r\n            this.post.content = contents;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    methods: {\r\n      fetchPost() {\r\n        const boardId = this.$route.params.id;\r\n        axios.get(`http://localhost:7777/boards/${boardId}`)\r\n          .then(response => {\r\n            this.updatedPost.title = response.data.title;\r\n            this.updatedPost.content = response.data.content;\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching post:', error);\r\n          });\r\n      },\r\n      submitForm() {\r\n        const boardId = this.$route.params.id;\r\n        axios.put(`http://localhost:7777/boards/${boardId}`, this.updatedPost)\r\n          .then(() => {\r\n            this.$router.push(`/board/${boardId}`); // 수정된 게시물로 이동\r\n          })\r\n          .catch(error => {\r\n            console.error('Error updating post:', error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n  \r\n  <style scoped>\r\n  .update-form-container {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .update-form {\r\n    background-color: #f9f9f9;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  input[type=\"text\"],\r\n  textarea {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  button.submit-button {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button.submit-button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAuB;gEAChCC,mBAAA,CAAe,YAAX,QAAM;;EAEHD,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAA8B;EAAvBC,GAAG,EAAC;AAAO,GAAC,KAAG;;EAGnBF,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAS,GAAC,KAAG;gEAG1BD,mBAAA,CAA0D;EAAlDE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAgB,OAAK;;uBAXrDI,mBAAA,CAaM,OAbNC,UAaM,GAZJC,UAAe,EACfL,mBAAA,CAUO;IAVAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHnBC,cAAA,KAAAC,IAAA,KAG6BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEV,KAAK,EAAC;MACvCC,mBAAA,CAGM,OAHNY,UAGM,GAFJC,UAA8B,E,gBAC9Bb,mBAAA,CAAmE;IAA5DE,IAAI,EAAC,MAAM;IAACY,EAAE,EAAC,OAAO;IANvC,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAMiDC,KAAA,CAAAC,WAAW,CAACC,KAAK,GAAAH,MAAA;IAAEI,QAAQ,EAAR;iDAAnBH,KAAA,CAAAC,WAAW,CAACC,KAAK,E,KAE1DlB,mBAAA,CAGM,OAHNoB,UAGM,GAFJC,UAAgC,E,gBAChCrB,mBAAA,CAA4E;IAAlEc,EAAE,EAAC,YAAY;IAVnC,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAU6CC,KAAA,CAAAC,WAAW,CAACK,OAAO,GAAAP,MAAA;IAAEI,QAAQ,EAAR;iDAArBH,KAAA,CAAAC,WAAW,CAACK,OAAO,E,KAExDC,UAA0D,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}