{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\nimport $ from 'jquery';\nimport 'bootstrap';\nimport 'summernote/dist/summernote-lite.css';\nimport 'summernote/dist/summernote-lite';\nexport default {\n  data() {\n    return {\n      updatedPost: {\n        title: '',\n        content: ''\n      }\n    };\n  },\n  created() {\n    this.fetchPost();\n  },\n  computed: {\n    ...mapGetters(['userNickname'])\n  },\n  mounted() {\n    // Summernote 초기화\n    $('#summernote').summernote({\n      height: 300,\n      // 높이 설정 (원하는 대로 조절 가능)\n      callbacks: {\n        onChange: contents => {\n          // 내용이 변경될 때마다 데이터에 저장\n          this.updatedPost.content = contents;\n        }\n      }\n    });\n  },\n  methods: {\n    fetchPost() {\n      const boardId = this.$route.params.id;\n      axios.get(`http://localhost:7777/boards/${boardId}`).then(response => {\n        this.updatedPost.title = response.data.title;\n        this.updatedPost.content = response.data.content;\n        // 썸머노트 에디터에 게시물 내용 설정\n        $('#summernote').summernote('code', response.data.content);\n      }).catch(error => {\n        console.error('Error fetching post:', error);\n      });\n    },\n    submitForm() {\n      const boardId = this.$route.params.id;\n      axios.put(`http://localhost:7777/boards/${boardId}`, this.updatedPost).then(() => {\n        this.$router.push(`/board/${boardId}`); // 수정된 게시물로 이동\n      }).catch(error => {\n        console.error('Error updating post:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","mapGetters","$","data","updatedPost","title","content","created","fetchPost","computed","mounted","summernote","height","callbacks","onChange","contents","methods","boardId","$route","params","id","get","then","response","catch","error","console","submitForm","put","$router","push"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\BoardUpdate.vue"],"sourcesContent":["<template>\n    <div class=\"update-form-container\">\n        <h2>게시물 수정</h2>\n        <form @submit.prevent=\"submitForm\" class=\"update-form\">\n            <div class=\"form-group\">\n                <label for=\"title\">제목</label>\n                <input type=\"text\" id=\"title\" v-model=\"updatedPost.title\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"content\">내용</label>\n                <textarea id=\"summernote\" required></textarea>\n            </div>\n            <button type=\"submit\" class=\"submit-button\">수정 완료</button>\n        </form>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\nimport $ from 'jquery';\nimport 'bootstrap';\nimport 'summernote/dist/summernote-lite.css';\nimport 'summernote/dist/summernote-lite';\n\nexport default {\n    data() {\n        return {\n            updatedPost: {\n                title: '',\n                content: ''\n            }\n        };\n    },\n    created() {\n        this.fetchPost();\n    },\n    computed: {\n        ...mapGetters(['userNickname'])\n    },\n    mounted() {\n        // Summernote 초기화\n        $('#summernote').summernote({\n            height: 300, // 높이 설정 (원하는 대로 조절 가능)\n            callbacks: {\n                onChange: (contents) => {\n                    // 내용이 변경될 때마다 데이터에 저장\n                    this.updatedPost.content = contents;\n                }\n            }\n        });\n    },\n    methods: {\n        fetchPost() {\n            const boardId = this.$route.params.id;\n            axios.get(`http://localhost:7777/boards/${boardId}`)\n                .then(response => {\n                    this.updatedPost.title = response.data.title;\n                    this.updatedPost.content = response.data.content;\n                    // 썸머노트 에디터에 게시물 내용 설정\n                    $('#summernote').summernote('code', response.data.content);\n                })\n                .catch(error => {\n                    console.error('Error fetching post:', error);\n                });\n        },\n        submitForm() {\n            const boardId = this.$route.params.id;\n            axios.put(`http://localhost:7777/boards/${boardId}`, this.updatedPost)\n                .then(() => {\n                    this.$router.push(`/board/${boardId}`); // 수정된 게시물로 이동\n                })\n                .catch(error => {\n                    console.error('Error updating post:', error);\n                });\n        }\n    }\n};\n</script>\n\n<style scoped>\n.update-form-container {\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\n.update-form {\n    background-color: #f9f9f9;\n    padding: 20px;\n    border-radius: 5px;\n}\n\n.form-group {\n    margin-bottom: 15px;\n}\n\nlabel {\n    display: block;\n    font-weight: bold;\n}\n\ninput[type=\"text\"],\ntextarea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    box-sizing: border-box;\n}\n\nbutton.submit-button {\n    background-color: #007bff;\n    color: #fff;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\nbutton.submit-button:hover {\n    background-color: #0056b3;\n}\n</style>"],"mappings":";AAkBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,UAAS,QAAS,MAAM;AACjC,OAAOC,CAAA,MAAO,QAAQ;AACtB,OAAO,WAAW;AAClB,OAAO,qCAAqC;AAC5C,OAAO,iCAAiC;AAExC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACb;IACJ,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,SAAS,CAAC,CAAC;EACpB,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGR,UAAU,CAAC,CAAC,cAAc,CAAC;EAClC,CAAC;EACDS,OAAOA,CAAA,EAAG;IACN;IACAR,CAAC,CAAC,aAAa,CAAC,CAACS,UAAU,CAAC;MACxBC,MAAM,EAAE,GAAG;MAAE;MACbC,SAAS,EAAE;QACPC,QAAQ,EAAGC,QAAQ,IAAK;UACpB;UACA,IAAI,CAACX,WAAW,CAACE,OAAM,GAAIS,QAAQ;QACvC;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,EAAE;IACLR,SAASA,CAAA,EAAG;MACR,MAAMS,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrCpB,KAAK,CAACqB,GAAG,CAAE,gCAA+BJ,OAAQ,EAAC,EAC9CK,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACnB,WAAW,CAACC,KAAI,GAAIkB,QAAQ,CAACpB,IAAI,CAACE,KAAK;QAC5C,IAAI,CAACD,WAAW,CAACE,OAAM,GAAIiB,QAAQ,CAACpB,IAAI,CAACG,OAAO;QAChD;QACAJ,CAAC,CAAC,aAAa,CAAC,CAACS,UAAU,CAAC,MAAM,EAAEY,QAAQ,CAACpB,IAAI,CAACG,OAAO,CAAC;MAC9D,CAAC,EACAkB,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACV,CAAC;IACDE,UAAUA,CAAA,EAAG;MACT,MAAMV,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrCpB,KAAK,CAAC4B,GAAG,CAAE,gCAA+BX,OAAQ,EAAC,EAAE,IAAI,CAACb,WAAW,EAChEkB,IAAI,CAAC,MAAM;QACR,IAAI,CAACO,OAAO,CAACC,IAAI,CAAE,UAASb,OAAQ,EAAC,CAAC,EAAE;MAC5C,CAAC,EACAO,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACV;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}