{"ast":null,"code":"import $ from \"jquery\";\n// You must import summernote js and css for yourself\n\n// https://summernote.org/deep-dive/#callbacks\nimport events from \"./events\";\nif (!window.SUMMERNOTE_DEFAULT_CONFIGS) {\n  window.SUMMERNOTE_DEFAULT_CONFIGS = {};\n}\nexport default {\n  props: {\n    modelValue: {\n      default: null,\n      required: true,\n      event: \"change\",\n      validator(value) {\n        return value === null || typeof value === \"string\" || value instanceof String;\n      }\n    },\n    // https://summernote.org/deep-dive/\n    config: {\n      type: Object,\n      default: () => window.SUMMERNOTE_DEFAULT_CONFIGS\n    }\n  },\n  data() {\n    return {\n      // jQuery DOM\n      elem: null\n    };\n  },\n  mounted() {\n    this.elem = $(this.$refs.summernoteRefElement);\n    this.elem.summernote(this.config);\n    $(this.elem).on(\"summernote.change\", this.onChange);\n    if (this.modelValue) {\n      $(this.elem).summernote(\"code\", this.modelValue);\n    }\n    this.registerEvents();\n  },\n  watch: {\n    modelValue(newValue) {\n      const currValue = $(this.elem).summernote(\"code\");\n      if (newValue != currValue) {\n        $(this.elem).summernote(\"code\", newValue);\n      }\n    }\n  },\n  methods: {\n    onChange(event) {\n      const value = $(this.elem).summernote(\"code\");\n      this.$emit(\"update:modelValue\", value);\n    },\n    registerEvents() {\n      for (var realName in events) {\n        this.elem.on(`${realName}`, (...args) => {\n          this.$emit(`${events[realName]}`, ...args);\n        });\n      }\n    }\n  },\n  /**\n   * Free up memory\n   */\n  beforeUnmount() {\n    if (this.elem) {\n      this.elem.summernote(\"destroy\");\n      this.elem = null;\n    }\n  }\n};","map":{"version":3,"names":["$","events","window","SUMMERNOTE_DEFAULT_CONFIGS","props","modelValue","default","required","event","validator","value","String","config","type","Object","data","elem","mounted","$refs","summernoteRefElement","summernote","on","onChange","registerEvents","watch","newValue","currValue","methods","$emit","realName","args","beforeUnmount"],"sources":["C:\\encore\\vsc_java_workspace\\be05-3rd-1team-BBABAP-Frontend\\node_modules\\vue3-summernote-editor\\src\\SummernoteEditor.vue"],"sourcesContent":["<template>\n  <div ref=\"summernoteRefElement\"></div>\n</template>\n\n<script>\nimport $ from \"jquery\";\n// You must import summernote js and css for yourself\n\n// https://summernote.org/deep-dive/#callbacks\nimport events from \"./events\";\n\nif (!window.SUMMERNOTE_DEFAULT_CONFIGS) {\n  window.SUMMERNOTE_DEFAULT_CONFIGS = {};\n}\n\nexport default {\n  props: {\n    modelValue: {\n      default: null,\n      required: true,\n      event: \"change\",\n      validator(value) {\n        return (\n          value === null || typeof value === \"string\" || value instanceof String\n        );\n      },\n    },\n    // https://summernote.org/deep-dive/\n    config: {\n      type: Object,\n      default: () => window.SUMMERNOTE_DEFAULT_CONFIGS,\n    },\n  },\n  data() {\n    return {\n      // jQuery DOM\n      elem: null,\n    };\n  },\n  mounted() {\n    this.elem = $(this.$refs.summernoteRefElement);\n    this.elem.summernote(this.config);\n    $(this.elem).on(\"summernote.change\", this.onChange);\n    if (this.modelValue) {\n      $(this.elem).summernote(\"code\", this.modelValue);\n    }\n    this.registerEvents();\n  },\n  watch: {\n    modelValue(newValue) {\n      const currValue = $(this.elem).summernote(\"code\");\n      if (newValue != currValue) {\n        $(this.elem).summernote(\"code\", newValue);\n      }\n    },\n  },\n  methods: {\n    onChange(event) {\n      const value = $(this.elem).summernote(\"code\");\n      this.$emit(\"update:modelValue\", value);\n    },\n    registerEvents() {\n      for (var realName in events) {\n        this.elem.on(`${realName}`, (...args) => {\n          this.$emit(`${events[realName]}`, ...args);\n        });\n      }\n    },\n  },\n  /**\n   * Free up memory\n   */\n  beforeUnmount() {\n    if (this.elem) {\n      this.elem.summernote(\"destroy\");\n      this.elem = null;\n    }\n  },\n};\n</script>"],"mappings":"AAKA,OAAOA,CAAA,MAAO,QAAQ;AACtB;;AAEA;AACA,OAAOC,MAAK,MAAO,UAAU;AAE7B,IAAI,CAACC,MAAM,CAACC,0BAA0B,EAAE;EACtCD,MAAM,CAACC,0BAAyB,GAAI,CAAC,CAAC;AACxC;AAEA,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,QAAQ;MACfC,SAASA,CAACC,KAAK,EAAE;QACf,OACEA,KAAI,KAAM,IAAG,IAAK,OAAOA,KAAI,KAAM,QAAO,IAAKA,KAAI,YAAaC,MAAK;MAEzE;IACF,CAAC;IACD;IACAC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZR,OAAO,EAAEA,CAAA,KAAMJ,MAAM,CAACC;IACxB;EACF,CAAC;EACDY,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,IAAG,GAAIhB,CAAC,CAAC,IAAI,CAACkB,KAAK,CAACC,oBAAoB,CAAC;IAC9C,IAAI,CAACH,IAAI,CAACI,UAAU,CAAC,IAAI,CAACR,MAAM,CAAC;IACjCZ,CAAC,CAAC,IAAI,CAACgB,IAAI,CAAC,CAACK,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAACC,QAAQ,CAAC;IACnD,IAAI,IAAI,CAACjB,UAAU,EAAE;MACnBL,CAAC,CAAC,IAAI,CAACgB,IAAI,CAAC,CAACI,UAAU,CAAC,MAAM,EAAE,IAAI,CAACf,UAAU,CAAC;IAClD;IACA,IAAI,CAACkB,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,KAAK,EAAE;IACLnB,UAAUA,CAACoB,QAAQ,EAAE;MACnB,MAAMC,SAAQ,GAAI1B,CAAC,CAAC,IAAI,CAACgB,IAAI,CAAC,CAACI,UAAU,CAAC,MAAM,CAAC;MACjD,IAAIK,QAAO,IAAKC,SAAS,EAAE;QACzB1B,CAAC,CAAC,IAAI,CAACgB,IAAI,CAAC,CAACI,UAAU,CAAC,MAAM,EAAEK,QAAQ,CAAC;MAC3C;IACF;EACF,CAAC;EACDE,OAAO,EAAE;IACPL,QAAQA,CAACd,KAAK,EAAE;MACd,MAAME,KAAI,GAAIV,CAAC,CAAC,IAAI,CAACgB,IAAI,CAAC,CAACI,UAAU,CAAC,MAAM,CAAC;MAC7C,IAAI,CAACQ,KAAK,CAAC,mBAAmB,EAAElB,KAAK,CAAC;IACxC,CAAC;IACDa,cAAcA,CAAA,EAAG;MACf,KAAK,IAAIM,QAAO,IAAK5B,MAAM,EAAE;QAC3B,IAAI,CAACe,IAAI,CAACK,EAAE,CAAE,GAAEQ,QAAS,EAAC,EAAE,CAAC,GAAGC,IAAI,KAAK;UACvC,IAAI,CAACF,KAAK,CAAE,GAAE3B,MAAM,CAAC4B,QAAQ,CAAE,EAAC,EAAE,GAAGC,IAAI,CAAC;QAC5C,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EACD;;;EAGAC,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACf,IAAI,EAAE;MACb,IAAI,CAACA,IAAI,CAACI,UAAU,CAAC,SAAS,CAAC;MAC/B,IAAI,CAACJ,IAAG,GAAI,IAAI;IAClB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}