{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"게시물 목록\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성자\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성일\")])], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"pagination\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  style: {\n    \"text-align\": \"right\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayedBoards, board => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: board.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(board.id), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_router_link, {\n      to: '/board/' + board.id\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(board.title), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), _createElementVNode(\"td\", null, _toDisplayString(board.author), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(board.created_date), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_5, [$data.currentPage > 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    class: \"pagination-btn\"\n  }, \"이전\")) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.totalPages, page => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: page,\n      onClick: $event => $options.setPage(page),\n      class: _normalizeClass({\n        'pagination-btn': true,\n        'active': $data.currentPage === page\n      })\n    }, _toDisplayString(page), 11 /* TEXT, CLASS, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */)), $data.currentPage < $options.totalPages ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    class: \"pagination-btn\"\n  }, \"다음\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToPostForm && $options.goToPostForm(...args)),\n    class: \"add-btn\"\n  }, \"게시물 작성하기\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$options","displayedBoards","board","key","id","_toDisplayString","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","title","_","author","created_date","_hoisted_5","$data","currentPage","onClick","_cache","args","prevPage","_createCommentVNode","totalPages","page","$event","setPage","_normalizeClass","_hoisted_6","nextPage","_hoisted_7","goToPostForm"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\BoardListJsonServer.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <h2>게시물 목록</h2>\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>제목</th>\n            <th>작성자</th>\n            <th>작성일</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"board in displayedBoards\" :key=\"board.id\">\n            <td>{{ board.id }}</td>\n            <td><router-link :to=\"'/board/' + board.id\">{{ board.title }}</router-link></td>\n            <td>{{ board.author }}</td>\n            <td>{{ board.created_date }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"pagination\">\n        <button v-if=\"currentPage > 1\" @click=\"prevPage\" class=\"pagination-btn\">이전</button>\n        <button v-for=\"page in totalPages\" :key=\"page\" @click=\"setPage(page)\" :class=\"{ 'pagination-btn': true, 'active': currentPage === page }\">{{ page }}</button>\n        <button v-if=\"currentPage < totalPages\" @click=\"nextPage\" class=\"pagination-btn\">다음</button>\n      </div>\n      <div style=\"text-align:right\">\n        <button @click=\"goToPostForm\" class=\"add-btn\">게시물 작성하기</button>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        boards: [],\n        currentPage: 1,\n        perPage: 10\n      };\n    },\n    computed: {\n      totalPages() {\n        return Math.ceil(this.boards.length / this.perPage);\n      },\n      displayedBoards() {\n        const startIndex = (this.currentPage - 1) * this.perPage;\n        const endIndex = this.currentPage * this.perPage;\n        return this.boards.slice(startIndex, endIndex);\n      }\n    },\n    created() {\n      this.fetchBoards();\n    },\n    methods: {\n      fetchBoards() {\n        axios.get('http://localhost:7777/boards')\n          .then(response => {\n            this.boards = response.data;\n          })\n          .catch(error => {\n            console.error('Error fetching boards:', error);\n          });\n      },\n      goToPostForm() {\n        this.$router.push('/post/new');\n      },\n      setPage(page) {\n        this.currentPage = page;\n      },\n      nextPage() {\n        if (this.currentPage < this.totalPages) {\n          this.currentPage++;\n        }\n      },\n      prevPage() {\n        if (this.currentPage > 1) {\n          this.currentPage--;\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style>\n  .container {\n    margin: 20px auto;\n    width: 80%;\n  }\n  \n  .table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  \n  .table th, .table td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n  }\n  \n  .table th {\n    background-color: #f2f2f2;\n  }\n  \n  .pagination {\n    margin-top: 20px;\n    text-align: center;\n  }\n  \n  .pagination-btn {\n    background-color: #4CAF50;\n    color: white;\n    padding: 8px 16px;\n    border: none;\n    cursor: pointer;\n  }\n  \n  .pagination-btn:hover {\n    background-color: #45a049;\n  }\n  \n  .active {\n    background-color: #45a049;\n  }\n  \n  .add-btn {\n    background-color: #008CBA;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    cursor: pointer;\n    margin-top: 20px;\n  }\n  \n  .add-btn:hover {\n    background-color: #00698C;\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAe,YAAX,QAAM;;EACHD,KAAK,EAAC;AAAO;gCAClBC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAY,YAAR,KAAG,E;;EAYRD,KAAK,EAAC;AAAY;mBArB7B;;EA0BWE,KAAwB,EAAxB;IAAA;EAAA;AAAwB;;;uBAzB/BC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,UAAe,EACfJ,mBAAA,CAiBQ,SAjBRK,UAiBQ,GAhBNC,UAOQ,EACRN,mBAAA,CAOQ,iB,kBANNE,mBAAA,CAKKK,SAAA,QAlBfC,WAAA,CAa8BC,QAAA,CAAAC,eAAe,EAAxBC,KAAK;yBAAhBT,mBAAA,CAKK;MALiCU,GAAG,EAAED,KAAK,CAACE;QAC/Cb,mBAAA,CAAuB,YAAAc,gBAAA,CAAhBH,KAAK,CAACE,EAAE,kBACfb,mBAAA,CAAgF,aAA5Ee,YAAA,CAAuEC,sBAAA;MAAzDC,EAAE,cAAcN,KAAK,CAACE;;MAfpDK,OAAA,EAAAC,QAAA,CAewD,MAAiB,CAfzEC,gBAAA,CAAAN,gBAAA,CAe2DH,KAAK,CAACU,KAAK,iB;MAftEC,CAAA;mDAgBYtB,mBAAA,CAA2B,YAAAc,gBAAA,CAApBH,KAAK,CAACY,MAAM,kBACnBvB,mBAAA,CAAiC,YAAAc,gBAAA,CAA1BH,KAAK,CAACa,YAAY,iB;sCAI/BxB,mBAAA,CAIM,OAJNyB,UAIM,GAHUC,KAAA,CAAAC,WAAW,Q,cAAzBzB,mBAAA,CAAmF;IAtB3FU,GAAA;IAsBwCgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,QAAA,CAAAsB,QAAA,IAAAtB,QAAA,CAAAsB,QAAA,IAAAD,IAAA,CAAQ;IAAE/B,KAAK,EAAC;KAAiB,IAAE,KAtBlFiC,mBAAA,iB,kBAuBQ9B,mBAAA,CAA6JK,SAAA,QAvBrKC,WAAA,CAuB+BC,QAAA,CAAAwB,UAAU,EAAlBC,IAAI;yBAAnBhC,mBAAA,CAA6J;MAAzHU,GAAG,EAAEsB,IAAI;MAAGN,OAAK,EAAAO,MAAA,IAAE1B,QAAA,CAAA2B,OAAO,CAACF,IAAI;MAAInC,KAAK,EAvBpFsC,eAAA;QAAA;QAAA,UAuB0HX,KAAA,CAAAC,WAAW,KAAKO;MAAI;wBAAOA,IAAI,gCAvBzJI,UAAA;kCAwBsBZ,KAAA,CAAAC,WAAW,GAAGlB,QAAA,CAAAwB,UAAU,I,cAAtC/B,mBAAA,CAA4F;IAxBpGU,GAAA;IAwBiDgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,QAAA,CAAA8B,QAAA,IAAA9B,QAAA,CAAA8B,QAAA,IAAAT,IAAA,CAAQ;IAAE/B,KAAK,EAAC;KAAiB,IAAE,KAxB3FiC,mBAAA,e,GA0BMhC,mBAAA,CAEM,OAFNwC,UAEM,GADJxC,mBAAA,CAA+D;IAAtD4B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,QAAA,CAAAgC,YAAA,IAAAhC,QAAA,CAAAgC,YAAA,IAAAX,IAAA,CAAY;IAAE/B,KAAK,EAAC;KAAU,UAAQ,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}