{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      boards: [],\n      currentPage: 1,\n      perPage: 10\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.boards.length / this.perPage);\n    },\n    displayedBoards() {\n      const startIndex = (this.currentPage - 1) * this.perPage;\n      const endIndex = this.currentPage * this.perPage;\n      return this.boards.slice(startIndex, endIndex);\n    }\n  },\n  created() {\n    this.fetchBoards();\n  },\n  methods: {\n    fetchBoards() {\n      axios.get('http://localhost:7777/boards').then(response => {\n        // id 값을 기준으로 역순으로 정렬\n        this.boards = response.data.reverse();\n      }).catch(error => {\n        console.error('Error fetching boards:', error);\n      });\n    },\n    goToPostForm() {\n      this.$router.push('/post/new');\n    },\n    setPage(page) {\n      this.currentPage = page;\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","boards","currentPage","perPage","computed","totalPages","Math","ceil","length","displayedBoards","startIndex","endIndex","slice","created","fetchBoards","methods","get","then","response","reverse","catch","error","console","goToPostForm","$router","push","setPage","page","nextPage","prevPage"],"sources":["C:\\encore\\vsc_java_workspace\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\BoardListJsonServer.vue"],"sourcesContent":["<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      boards: [],\r\n      currentPage: 1,\r\n      perPage: 10\r\n    };\r\n  },\r\n  computed: {\r\n    totalPages() {\r\n      return Math.ceil(this.boards.length / this.perPage);\r\n    },\r\n    displayedBoards() {\r\n      const startIndex = (this.currentPage - 1) * this.perPage;\r\n      const endIndex = this.currentPage * this.perPage;\r\n      return this.boards.slice(startIndex, endIndex);\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchBoards();\r\n  },\r\n  methods: {\r\n    fetchBoards() {\r\n      axios.get('http://localhost:7777/boards')\r\n        .then(response => {\r\n          // id 값을 기준으로 역순으로 정렬\r\n          this.boards = response.data.reverse();\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching boards:', error);\r\n        });\r\n    },\r\n    goToPostForm() {\r\n      this.$router.push('/post/new');\r\n    },\r\n    setPage(page) {\r\n      this.currentPage = page;\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACN,MAAM,CAACO,MAAK,GAAI,IAAI,CAACL,OAAO,CAAC;IACrD,CAAC;IACDM,eAAeA,CAAA,EAAG;MAChB,MAAMC,UAAS,GAAI,CAAC,IAAI,CAACR,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,OAAO;MACxD,MAAMQ,QAAO,GAAI,IAAI,CAACT,WAAU,GAAI,IAAI,CAACC,OAAO;MAChD,OAAO,IAAI,CAACF,MAAM,CAACW,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;IAChD;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZf,KAAK,CAACiB,GAAG,CAAC,8BAA8B,EACrCC,IAAI,CAACC,QAAO,IAAK;QAChB;QACA,IAAI,CAACjB,MAAK,GAAIiB,QAAQ,CAAClB,IAAI,CAACmB,OAAO,CAAC,CAAC;MACvC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACN,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IACDC,OAAOA,CAACC,IAAI,EAAE;MACZ,IAAI,CAACzB,WAAU,GAAIyB,IAAI;IACzB,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAC1B,WAAU,GAAI,IAAI,CAACG,UAAU,EAAE;QACtC,IAAI,CAACH,WAAW,EAAE;MACpB;IACF,CAAC;IACD2B,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAC3B,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}