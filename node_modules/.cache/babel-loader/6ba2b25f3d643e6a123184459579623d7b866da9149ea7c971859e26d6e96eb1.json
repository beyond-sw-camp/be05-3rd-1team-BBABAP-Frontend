{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport Quill from 'quill'; // Quill 라이브러리 import\n\nexport default {\n  data() {\n    return {\n      post: {\n        title: '',\n        content: '',\n        created_at: '',\n        // 추가: 현재 시간을 저장할 속성,\n        created_date: '',\n        author: ''\n      },\n      quill: null // Quill 에디터 객체 저장\n    };\n  },\n  methods: {\n    submitForm() {\n      // 현재 시간을 설정\n      this.post.created_at = new Date().toISOString();\n      this.post.created_date = this.post.created_at.slice(0, 10);\n      this.post.author = '익명';\n      axios.post('http://localhost:7777/boards', this.post, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(() => {\n        this.$router.push('/boardlist');\n      }).catch(error => {\n        console.error('Error creating post:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Quill","data","post","title","content","created_at","created_date","author","quill","methods","submitForm","Date","toISOString","slice","headers","then","$router","push","catch","error","console"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\PostForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"post-form-container\">\r\n        <h2>게시물 작성</h2>\r\n        <form @submit.prevent=\"submitForm\" class=\"post-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"title\">제목:</label>\r\n                <input type=\"text\" id=\"title\" v-model=\"post.title\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"content\">내용:</label>\r\n                <!-- Quill 에디터로 대체 -->\r\n                <div ref=\"editor\" class=\"editor\"></div>\r\n<!--                <textarea id=\"content\" v-model=\"post.content\" required></textarea>-->\r\n            </div>\r\n            <button type=\"submit\" class=\"submit-button\">작성</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Quill from 'quill'; // Quill 라이브러리 import\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            post: {\r\n                title: '',\r\n                content: '',\r\n                created_at: '', // 추가: 현재 시간을 저장할 속성,\r\n                created_date:'',\r\n                author: '',\r\n            },\r\n            quill: null, // Quill 에디터 객체 저장\r\n        };\r\n    },\r\n    \r\n    methods: {\r\n        submitForm() {\r\n            // 현재 시간을 설정\r\n            this.post.created_at = new Date().toISOString();\r\n            this.post.created_date = this.post.created_at.slice(0, 10);\r\n            this.post.author = '익명';\r\n            \r\n            axios.post('http://localhost:7777/boards', this.post, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(() => {\r\n                this.$router.push('/boardlist');  \r\n            })\r\n            .catch(error => {\r\n                console.error('Error creating post:', error);\r\n            });\r\n        },\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.post-form-container {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n}\r\n\r\n.post-form {\r\n    background-color: #f9f9f9;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.form-group {\r\n    margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n    display: block;\r\n    font-weight: bold;\r\n}\r\n\r\ninput[type=\"text\"],\r\ntextarea {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton.submit-button {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton.submit-button:hover {\r\n    background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";AAoBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,KAAI,MAAO,OAAO,EAAE;;AAE3B,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE,EAAE;QAAE;QAChBC,YAAY,EAAC,EAAE;QACfC,MAAM,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE,IAAI,CAAE;IACjB,CAAC;EACL,CAAC;EAEDC,OAAO,EAAE;IACLC,UAAUA,CAAA,EAAG;MACT;MACA,IAAI,CAACR,IAAI,CAACG,UAAS,GAAI,IAAIM,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC/C,IAAI,CAACV,IAAI,CAACI,YAAW,GAAI,IAAI,CAACJ,IAAI,CAACG,UAAU,CAACQ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1D,IAAI,CAACX,IAAI,CAACK,MAAK,GAAI,IAAI;MAEvBR,KAAK,CAACG,IAAI,CAAC,8BAA8B,EAAE,IAAI,CAACA,IAAI,EAAE;QAClDY,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,EACAC,IAAI,CAAC,MAAM;QACR,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MACnC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACN;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}