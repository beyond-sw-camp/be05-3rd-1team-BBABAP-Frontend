{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2ceaf9be\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"post-form-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"form-title\"\n}, \"게시물 작성\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\",\n  class: \"form-label\"\n}, \"제목:\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"content\",\n  class: \"form-label\"\n}, \"내용:\"), /*#__PURE__*/_createCommentVNode(\" 웹 에디터 추가 \"), /*#__PURE__*/_createElementVNode(\"textarea\", {\n  id: \"content\",\n  class: \"form-textarea\",\n  required: \"\"\n})], -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submit-button\"\n}, \"작성\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"post-form\"\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.post.title = $event),\n    class: \"form-input\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.post.title]])]), _hoisted_5, _hoisted_6], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createCommentVNode","id","required","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_3","_hoisted_4","$event","$data","post","title","_hoisted_5","_hoisted_6"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\PostForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"post-form-container\">\r\n    <h2 class=\"form-title\">게시물 작성</h2>\r\n    <form @submit.prevent=\"submitForm\" class=\"post-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"title\" class=\"form-label\">제목:</label>\r\n        <input type=\"text\" id=\"title\" v-model=\"post.title\" class=\"form-input\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"content\" class=\"form-label\">내용:</label>\r\n        <!-- 웹 에디터 추가 -->\r\n        <textarea id=\"content\" class=\"form-textarea\" required></textarea>\r\n      </div>\r\n      <button type=\"submit\" class=\"submit-button\">작성</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      post: {\r\n        title: '',\r\n        content: '', // content 값을 TinyMCE 에디터로 설정\r\n        created_at: '',\r\n        created_date:'',\r\n        author: '',\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      tinymce.init({\r\n        selector: '#content',\r\n        plugins: 'autoresize',\r\n        toolbar: 'undo redo | formatselect | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',\r\n        menubar: false,\r\n        min_height: 300,\r\n        autoresize_bottom_margin: 16,\r\n        autoresize_max_height: 500,\r\n        autoresize_min_height: 300\r\n      });\r\n    });\r\n  },\r\n  // eslint-disable-next-line vue/no-deprecated-destroyed-lifecycle\r\n  beforeUnmount() {\r\n    // 컴포넌트가 파괴되기 전에 에디터를 제거\r\n    // eslint-disable-next-line no-undef\r\n    tinymce.get('content').remove();\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      // TinyMCE 에디터에서 내용을 가져와 post에 할당\r\n      // eslint-disable-next-line no-undef\r\n      this.post.content = tinymce.get('content').getContent();\r\n      // 현재 시간을 설정\r\n      this.post.created_at = new Date().toISOString();\r\n      this.post.created_date = this.post.created_at.slice(0, 10);\r\n      this.post.author = '익명';\r\n\r\n      axios.post('http://localhost:7777/boards', this.post, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n          .then(() => {\r\n            this.$router.push('/boardlist');\r\n          })\r\n          .catch(error => {\r\n            console.error('Error creating post:', error);\r\n          });\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.post-form-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.post-form {\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  font-weight: bold;\r\n}\r\n\r\ninput[type=\"text\"],\r\ntextarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbutton.submit-button {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton.submit-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAqB;gEAC9BC,mBAAA,CAAkC;EAA9BD,KAAK,EAAC;AAAY,GAAC,QAAM;;EAEtBA,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAAiD;EAA1CC,GAAG,EAAC,OAAO;EAACF,KAAK,EAAC;GAAa,KAAG;gEAG3CC,mBAAA,CAIM;EAJDD,KAAK,EAAC;AAAY,I,aACrBC,mBAAA,CAAmD;EAA5CC,GAAG,EAAC,SAAS;EAACF,KAAK,EAAC;GAAa,KAAG,G,aAC3CG,mBAAA,cAAiB,E,aACjBF,mBAAA,CAAiE;EAAvDG,EAAE,EAAC,SAAS;EAACJ,KAAK,EAAC,eAAe;EAACK,QAAQ,EAAR;;gEAE/CJ,mBAAA,CAAuD;EAA/CK,IAAI,EAAC,QAAQ;EAACN,KAAK,EAAC;GAAgB,IAAE;;uBAZlDO,mBAAA,CAcM,OAdNC,UAcM,GAbJC,UAAkC,EAClCR,mBAAA,CAWO;IAXAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEb,KAAK,EAAC;MACvCC,mBAAA,CAGM,OAHNe,UAGM,GAFJC,UAAiD,E,gBACjDhB,mBAAA,CAA+E;IAAxEK,IAAI,EAAC,MAAM;IAACF,EAAE,EAAC,OAAO;IANrC,uBAAAO,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAM+CC,KAAA,CAAAC,IAAI,CAACC,KAAK,GAAAH,MAAA;IAAElB,KAAK,EAAC,YAAY;IAACK,QAAQ,EAAR;iDAA/Bc,KAAA,CAAAC,IAAI,CAACC,KAAK,E,KAEnDC,UAIM,EACNC,UAAuD,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}