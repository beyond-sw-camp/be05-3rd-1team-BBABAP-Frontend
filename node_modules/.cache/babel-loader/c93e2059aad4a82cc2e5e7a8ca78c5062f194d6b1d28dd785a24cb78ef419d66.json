{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9bda156e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"map_wrap\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"500px\",\n    \"position\": \"relative\",\n    \"overflow\": \"hidden\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = {\n  id: \"menu_wrap\",\n  class: \"bg_white\"\n};\nconst _hoisted_4 = {\n  class: \"option\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"검색하기\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_7 = {\n  id: \"placesList\"\n};\nconst _hoisted_8 = {\n  class: \"info\"\n};\nconst _hoisted_9 = {\n  class: \"jibun gray\"\n};\nconst _hoisted_10 = {\n  class: \"tel\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"pagination\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.searchPlaces && $options.searchPlaces(...args), [\"prevent\"]))\n  }, [_createTextVNode(\" 키워드 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.keyword = $event),\n    size: \"15\",\n    placeholder: \"전기차\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.keyword]]), _hoisted_5], 32 /* NEED_HYDRATION */)])]), _hoisted_6, _createElementVNode(\"ul\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.places, (place, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"item\"\n    }, [_createElementVNode(\"span\", {\n      class: _normalizeClass('markerbg marker_' + (index + 1))\n    }, null, 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"h5\", null, _toDisplayString(place.place_name), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(place.road_address_name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, _toDisplayString(place.address_name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(place.phone), 1 /* TEXT */), _createElementVNode(\"span\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.toggleFavorite(place)\n    }, _toDisplayString($options.isFavorite(place) ? '제거' : '추가'), 9 /* TEXT, PROPS */, _hoisted_11)])])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_12])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","style","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","args","$options","searchPlaces","_createTextVNode","$event","$data","keyword","size","placeholder","_hoisted_5","_hoisted_6","_hoisted_7","_Fragment","_renderList","places","place","index","key","_normalizeClass","_hoisted_8","_toDisplayString","place_name","road_address_name","_hoisted_9","address_name","_hoisted_10","phone","onClick","toggleFavorite","isFavorite","_hoisted_11","_hoisted_12"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\components\\KakaoMap.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"map_wrap\">\r\n      <div id=\"map\" style=\"width: 100%; height: 500px; position: relative; overflow: hidden;\"></div>\r\n\r\n      <div id=\"menu_wrap\" class=\"bg_white\">\r\n        <div class=\"option\">\r\n          <div>\r\n            <form @submit.prevent=\"searchPlaces\">\r\n              키워드 : <input type=\"text\" v-model=\"keyword\" size=\"15\" placeholder=\"전기차\">\r\n              <button type=\"submit\">검색하기</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <hr>\r\n        <ul id=\"placesList\">\r\n          <li v-for=\"(place, index) in places\" :key=\"index\" class=\"item\">\r\n            <span :class=\"'markerbg marker_' + (index + 1)\"></span>\r\n            <div class=\"info\">\r\n              <h5>{{ place.place_name }}</h5>\r\n              <span>{{ place.road_address_name }}</span>\r\n              <span class=\"jibun gray\">{{ place.address_name }}</span>\r\n              <span class=\"tel\">{{ place.phone }}</span>\r\n              <span>\r\n    <button @click=\"toggleFavorite(place)\">\r\n      {{ isFavorite(place) ? '제거' : '추가' }}\r\n    </button>\r\n  </span>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <div id=\"pagination\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"KakaoMap\",\r\n  props: {\r\n    favorites: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      keyword: \"\",\r\n      places: [],\r\n      markers: [],\r\n      infoWindow: null // infoWindow 변수 추가\r\n    };\r\n  },\r\n  mounted() {\r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap();\r\n    } else {\r\n      const script = document.createElement(\"script\");\r\n      script.onload = () => window.kakao.maps.load(this.initMap);\r\n      script.src =\r\n        \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0&libraries=services\";\r\n      document.head.appendChild(script);\r\n    }\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const container = document.getElementById(\"map\");\r\n      const options = {\r\n        center: new window.kakao.maps.LatLng(37.566826, 126.9786567),\r\n        level: 3\r\n      };\r\n\r\n      this.map = new window.kakao.maps.Map(container, options);\r\n\r\n      // 전기차 충전소 마커를 표시합니다\r\n      this.displayElectricChargingStation();\r\n    },\r\n    displayElectricChargingStation() {\r\n      const ps = new window.kakao.maps.services.Places();\r\n      ps.categorySearch('OL7', this.placesSearchCB);\r\n    },\r\n    searchPlaces() {\r\n      if (!this.keyword.trim()) {\r\n        alert(\"키워드를 입력해주세요!\");\r\n        return;\r\n      }\r\n\r\n      const ps = new window.kakao.maps.services.Places();\r\n      ps.keywordSearch(this.keyword, this.placesSearchCB, { useMapBounds: true });\r\n    },\r\n    placesSearchCB(data, status, pagination) {\r\n      if (status === window.kakao.maps.services.Status.OK) {\r\n        this.places = data;\r\n        this.displayPlaces();\r\n        this.displayPagination(pagination);\r\n      } else if (status === window.kakao.maps.services.Status.ZERO_RESULT) {\r\n        alert(\"검색 결과가 존재하지 않습니다.\");\r\n      } else if (status === window.kakao.maps.services.Status.ERROR) {\r\n        alert(\"검색 결과 중 오류가 발생했습니다.\");\r\n      }\r\n    },\r\n    displayPlaces() {\r\n      this.removeMarkers();\r\n      const bounds = new window.kakao.maps.LatLngBounds();\r\n\r\n      this.places.forEach((place, index) => {\r\n        const position = new window.kakao.maps.LatLng(place.y, place.x);\r\n        const markerImage = new window.kakao.maps.MarkerImage(\r\n          \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\",\r\n          new window.kakao.maps.Size(36, 37),\r\n          {\r\n            spriteSize: new window.kakao.maps.Size(36, 691),\r\n            spriteOrigin: new window.kakao.maps.Point(0, (index * 46) + 10),\r\n            offset: new window.kakao.maps.Point(13, 37)\r\n          }\r\n        );\r\n        const marker = new window.kakao.maps.Marker({\r\n          position,\r\n          image: markerImage\r\n        });\r\n\r\n        marker.setMap(this.map);\r\n        this.markers.push(marker);\r\n\r\n        bounds.extend(position);\r\n\r\n        window.kakao.maps.event.addListener(marker, 'click', () => {\r\n          this.closeInfoWindows();\r\n          this.displayInfoWindow(place);\r\n        });\r\n      });\r\n\r\n      this.map.setBounds(bounds);\r\n    },\r\n    closeInfoWindows() {\r\n      if (this.infoWindow) {\r\n        this.infoWindow.setMap(null);\r\n      }\r\n    },\r\n    displayInfoWindow(place) {\r\n  const infoWindowStyle = `\r\n    padding: 10px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.2);\r\n    max-width: 300px;\r\n    text-align: left;\r\n    position: absolute;\r\n    z-index: 1;\r\n  `;\r\n\r\n  const content = `\r\n    <div id=\"infoWindowContent\" style=\"${infoWindowStyle}\">\r\n      <h5>${place.place_name}</h5>\r\n      <p>${place.road_address_name}</p>\r\n      <p class=\"jibun gray\">${place.address_name}</p>\r\n      <p class=\"tel\">${place.phone}</p>\r\n      <button id=\"favoriteButton\">\r\n        즐겨찾기 ${this.isFavorite(place) ? '제거' : '추가'}\r\n      </button>\r\n    </div>\r\n  `;\r\n\r\n  const position = new window.kakao.maps.LatLng(place.y, place.x);\r\n  const overlay = new window.kakao.maps.CustomOverlay({\r\n    content: content,\r\n    map: this.map,\r\n    position: position\r\n  });\r\n\r\n  // 즐겨찾기 버튼에 대한 클릭 이벤트 처리\r\n  const button = document.getElementById('favoriteButton');\r\n  button.addEventListener('click', () => {\r\n    this.addToFavorites(place);\r\n  });\r\n\r\n  this.infoWindow = overlay;\r\n},\r\n\r\n    addToFavorites(place) {\r\n      if (!this.isFavorite(place)) {\r\n        this.addFavorite(place);\r\n      } else {\r\n        this.removeFavorite(place);\r\n      }\r\n    },\r\n    displayPagination(pagination) {\r\n      const paginationEl = document.getElementById(\"pagination\");\r\n      paginationEl.innerHTML = \"\";\r\n\r\n      for (let i = 1; i <= pagination.last; i++) {\r\n        const el = document.createElement(\"a\");\r\n        el.href = \"#\";\r\n        el.textContent = i;\r\n\r\n        if (i === pagination.current) {\r\n          el.className = \"on\";\r\n        } else {\r\n          el.onclick = () => {\r\n            pagination.gotoPage(i);\r\n          };\r\n        }\r\n\r\n        paginationEl.appendChild(el);\r\n      }\r\n    },\r\n    removeMarkers() {\r\n      this.markers.forEach(marker => marker.setMap(null));\r\n      this.markers = [];\r\n    },\r\n    toggleFavorite(place) {\r\n      if (this.isFavorite(place)) {\r\n        this.removeFavorite(place);\r\n      } else {\r\n        this.addFavorite(place);\r\n      }\r\n    },\r\n    async addFavorite(place) {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/favorites', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(place)\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          this.$root.favorites.push(data);\r\n        } else {\r\n          console.error('Failed to add favorite');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adding favorite:', error);\r\n      }\r\n    },\r\n    async removeFavorite(place) {\r\n      try {\r\n        const index = this.$root.favorites.findIndex(favorite => favorite.place_name === place.place_name);\r\n        const response = await fetch(`http://localhost:3000/favorites/${this.$root.favorites[index].id}`, {\r\n          method: 'DELETE'\r\n        });\r\n        if (response.ok) {\r\n          this.$root.favorites.splice(index, 1);\r\n        } else {\r\n          console.error('Failed to remove favorite');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error removing favorite:', error);\r\n      }\r\n    },\r\n    isFavorite(place) {\r\n      return this.favorites.some(favorite => favorite.place_name === place.place_name);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n/* 여기에 스타일을 추가합니다 */\r\n#menu_wrap {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n.option {\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n}\r\n.option input[type=\"text\"] {\r\n  width: 70%;\r\n  height: 30px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n}\r\n.option button[type=\"submit\"] {\r\n  width: 25%;\r\n  height: 36px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n.option button[type=\"submit\"]:hover {\r\n  background-color: #0056b3;\r\n}\r\n#placesList {\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n#placesList .item {\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 10px 0;\r\n}\r\n#placesList .item:last-child {\r\n  border-bottom: none;\r\n}\r\n#placesList .item h5 {\r\n  margin-bottom: 5px;\r\n}\r\n#placesList .item .info {\r\n  color: #666;\r\n}\r\n#placesList .item .tel {\r\n  color: #009900;\r\n}\r\n.item button {\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #28a745; /* Green color */\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.item button:hover {\r\n  background-color: #218838; /* Darker green color on hover */\r\n}\r\n\r\n.infoWindow {\r\n  padding: 10px;\r\n  background-color: rgba(255, 255, 255, 0.9); /* 밝은 배경색 */\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.2);\r\n  max-width: 300px; /* 내용의 최대 너비 설정 */\r\n  text-align: left;\r\n  position: absolute;\r\n  z-index: 1;\r\n}\r\n\r\n.infoWindow h5 {\r\n  margin: 0 0 5px;\r\n  font-size: 16px;\r\n}\r\n.infoWindow p {\r\n  margin: 5px 0;\r\n}\r\n.infoWindow .tel {\r\n  color: #009900;\r\n}\r\n.infoWindow button {\r\n  display: block;\r\n  margin-top: 10px;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n.infoWindow button:hover {\r\n  background-color: #218838;\r\n}\r\n</style>"],"mappings":";;;EAESA,KAAK,EAAC;AAAU;gEACnBC,mBAAA,CAA8F;EAAzFC,EAAE,EAAC,KAAK;EAACC,KAAyE,EAAzE;IAAA;IAAA;IAAA;IAAA;EAAA;;;EAETD,EAAE,EAAC,WAAW;EAACF,KAAK,EAAC;;;EACnBA,KAAK,EAAC;AAAQ;gEAIbC,mBAAA,CAAmC;EAA3BG,IAAI,EAAC;AAAQ,GAAC,MAAI;gEAIhCH,mBAAA,CAAI;;EACAC,EAAE,EAAC;AAAY;;EAGVF,KAAK,EAAC;AAAM;;EAGTA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAK;oBAtB/B;iEA+BQC,mBAAA,CAA2B;EAAtBC,EAAE,EAAC;AAAY;;uBA9B1BG,mBAAA,CAiCM,cAhCJJ,mBAAA,CA+BM,OA/BNK,UA+BM,GA9BJC,UAA8F,EAE9FN,mBAAA,CA2BM,OA3BNO,UA2BM,GA1BJP,mBAAA,CAOM,OAPNQ,UAOM,GANJR,mBAAA,CAKM,cAJJA,mBAAA,CAGO;IAHAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MARzBC,cAAA,KAAAC,IAAA,KAQmCC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MAR/CG,gBAAA,CAQiD,SAC7B,G,gBAAAf,mBAAA,CAAiE;IAA1DG,IAAI,EAAC,MAAM;IATtC,uBAAAO,MAAA,QAAAA,MAAA,MAAAM,MAAA,IASgDC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IAAEG,IAAI,EAAC,IAAI;IAACC,WAAW,EAAC;iDAA/BH,KAAA,CAAAC,OAAO,E,GACzCG,UAAmC,C,gCAIzCC,UAAI,EACJtB,mBAAA,CAeK,MAfLuB,UAeK,I,kBAdHnB,mBAAA,CAaKoB,SAAA,QA7BfC,WAAA,CAgBuCR,KAAA,CAAAS,MAAM,EAhB7C,CAgBsBC,KAAK,EAAEC,KAAK;yBAAxBxB,mBAAA,CAaK;MAbiCyB,GAAG,EAAED,KAAK;MAAE7B,KAAK,EAAC;QACtDC,mBAAA,CAAuD;MAAhDD,KAAK,EAjBxB+B,eAAA,uBAiBgDF,KAAK;6BACzC5B,mBAAA,CAUM,OAVN+B,UAUM,GATJ/B,mBAAA,CAA+B,YAAAgC,gBAAA,CAAxBL,KAAK,CAACM,UAAU,kBACvBjC,mBAAA,CAA0C,cAAAgC,gBAAA,CAAjCL,KAAK,CAACO,iBAAiB,kBAChClC,mBAAA,CAAwD,QAAxDmC,UAAwD,EAAAH,gBAAA,CAA5BL,KAAK,CAACS,YAAY,kBAC9CpC,mBAAA,CAA0C,QAA1CqC,WAA0C,EAAAL,gBAAA,CAArBL,KAAK,CAACW,KAAK,kBAChCtC,mBAAA,CAIL,eAHLA,mBAAA,CAES;MAFAuC,OAAK,EAAAvB,MAAA,IAAEH,QAAA,CAAA2B,cAAc,CAACb,KAAK;wBAC/Bd,QAAA,CAAA4B,UAAU,CAACd,KAAK,uCAzBzBe,WAAA,E;oCA+BQC,WAA2B,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}