{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:3000/users', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const users = await response.json();\n          const user = users.find(user => user.username === this.username && user.password === this.password);\n          if (user) {\n            // 로그인 성공\n            alert(`${user.nickname} 님 반갑습니다!`);\n            // 로그인 성공 시 홈페이지로 자동 이동\n            this.$router.push('/');\n            // 상단바에 닉네임 표시 및 로그아웃 버튼 추가\n            this.$store.commit('setUser', user); // Vuex 사용 시 사용자 정보 저장\n          } else {\n            // 로그인 실패\n            alert('아이디 또는 비밀번호가 틀렸습니다.');\n          }\n        } else {\n          console.error('사용자 정보를 불러오는데 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('로그인 오류:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","username","password","methods","login","response","fetch","method","headers","ok","users","json","user","find","alert","nickname","$router","push","$store","commit","console","error"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\n  <div class=\"login-form\">\n    <h2>로그인</h2>\n    <form @submit.prevent=\"login\">\n      <div class=\"form-group\">\n        <label for=\"login-username\">ID</label>\n        <input type=\"text\" id=\"login-username\" v-model=\"username\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"login-password\">비밀번호</label>\n        <input type=\"password\" id=\"login-password\" v-model=\"password\" required>\n      </div>\n      <button type=\"submit\">로그인</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n  try {\n    const response = await fetch('http://localhost:3000/users', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.ok) {\n      const users = await response.json();\n      const user = users.find(user => user.username === this.username && user.password === this.password);\n      if (user) {\n        // 로그인 성공\n        alert(`${user.nickname} 님 반갑습니다!`);\n        // 로그인 성공 시 홈페이지로 자동 이동\n        this.$router.push('/');\n        // 상단바에 닉네임 표시 및 로그아웃 버튼 추가\n        this.$store.commit('setUser', user); // Vuex 사용 시 사용자 정보 저장\n      } else {\n        // 로그인 실패\n        alert('아이디 또는 비밀번호가 틀렸습니다.');\n      }\n    } else {\n      console.error('사용자 정보를 불러오는데 실패했습니다.');\n    }\n  } catch (error) {\n    console.error('로그인 오류:', error);\n  }\n}\n\n  }\n};\n</script>\n\n<style scoped>\n/* 필요한 스타일링은 여기에 추가하세요 */\n.login-form {\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #f9f9f9;\n}\n\n.login-form h2 {\n  margin-bottom: 20px;\n}\n\n.login-form form {\n  display: flex;\n  flex-direction: column;\n}\n\n.login-form .form-group {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n}\n\n.login-form label {\n  margin-bottom: 5px;\n}\n\n.login-form input {\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  margin-bottom: 10px;\n}\n\n.login-form button {\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n}\n\n.login-form button:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";AAkBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC1DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,KAAI,GAAI,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UACnC,MAAMC,IAAG,GAAIF,KAAK,CAACG,IAAI,CAACD,IAAG,IAAKA,IAAI,CAACX,QAAO,KAAM,IAAI,CAACA,QAAO,IAAKW,IAAI,CAACV,QAAO,KAAM,IAAI,CAACA,QAAQ,CAAC;UACnG,IAAIU,IAAI,EAAE;YACR;YACAE,KAAK,CAAE,GAAEF,IAAI,CAACG,QAAQ,WAAW,CAAC;YAClC;YACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;YACtB;YACA,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEP,IAAI,CAAC,EAAE;UACvC,OAAO;YACL;YACAE,KAAK,CAAC,qBAAqB,CAAC;UAC9B;QACF,OAAO;UACLM,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;QACxC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF;EAEE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}