{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7a92cc43\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"comment-form\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCommentText = $event),\n    placeholder: \"댓글을 입력하세요\",\n    class: \"comment-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCommentText]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addComment && $options.addComment(...args)),\n    class: \"comment-btn\"\n  }, \"댓글 작성\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","newCommentText","placeholder","onClick","args","$options","addComment"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\components\\CommentForm.vue"],"sourcesContent":["<template>\n    <div class=\"comment-form\">\n      <textarea v-model=\"newCommentText\" placeholder=\"댓글을 입력하세요\" class=\"comment-input\"></textarea>\n      <button @click=\"addComment\" class=\"comment-btn\">댓글 작성</button>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        newCommentText: ''\n      };\n    },\n    methods: {\n      addComment() {\n        const boardId = this.$route.params.id;\n        axios.post(`http://localhost:7777/boards/${boardId}/comments`, { text: this.newCommentText })\n          .then(response => {\n            this.newCommentText = ''; // Clear the input field after successful submission\n            this.$emit('comment-added'); // Emit event to notify parent component (BoardView) that a new comment has been added\n            console.log(response);\n          })\n          .catch(error => {\n            console.error('Error adding comment:', error);\n          });\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .comment-input {\n    width: calc(100% - 20px);\n    padding: 10px;\n    margin-bottom: 10px;\n  }\n  \n  .comment-btn {\n    width: 100%;\n    padding: 10px;\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n  }\n  \n  .comment-btn:hover {\n    background-color: #0056b3;\n  }\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAc;;uBAAzBC,mBAAA,CAGM,OAHNC,UAGM,G,gBAFJC,mBAAA,CAA4F;IAFlG,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAEyBC,KAAA,CAAAC,cAAc,GAAAF,MAAA;IAAEG,WAAW,EAAC,WAAW;IAACR,KAAK,EAAC;iDAA9CM,KAAA,CAAAC,cAAc,E,GACjCJ,mBAAA,CAA8D;IAArDM,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEV,KAAK,EAAC;KAAc,OAAK,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}