{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7a92cc43\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"comment-form\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCommentText = $event),\n    placeholder: \"댓글을 입력하세요\",\n    class: \"comment-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCommentText]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addComment && $options.addComment(...args)),\n    class: \"comment-btn\"\n  }, \"댓글 작성\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","newCommentText","placeholder","onClick","args","$options","addComment"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\components\\CommentForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"comment-form\">\r\n      <textarea v-model=\"newCommentText\" placeholder=\"댓글을 입력하세요\" class=\"comment-input\"></textarea>\r\n      <button @click=\"addComment\" class=\"comment-btn\">댓글 작성</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        newCommentText: ''\r\n      };\r\n    },\r\n    methods: {\r\n      addComment() {\r\n        const boardId = this.$route.params.id;\r\n        axios.post(`http://localhost:7777/boards/${boardId}/comments`, { text: this.newCommentText })\r\n          .then(response => {\r\n            this.newCommentText = ''; // Clear the input field after successful submission\r\n            this.$emit('comment-added'); // Emit event to notify parent component (BoardView) that a new comment has been added\r\n            console.log(response);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error adding comment:', error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .comment-input {\r\n    width: calc(100% - 20px);\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .comment-btn {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .comment-btn:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAc;;uBAAzBC,mBAAA,CAGM,OAHNC,UAGM,G,gBAFJC,mBAAA,CAA4F;IAFlG,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAEyBC,KAAA,CAAAC,cAAc,GAAAF,MAAA;IAAEG,WAAW,EAAC,WAAW;IAACR,KAAK,EAAC;iDAA9CM,KAAA,CAAAC,cAAc,E,GACjCJ,mBAAA,CAA8D;IAArDM,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEV,KAAK,EAAC;KAAc,OAAK,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}