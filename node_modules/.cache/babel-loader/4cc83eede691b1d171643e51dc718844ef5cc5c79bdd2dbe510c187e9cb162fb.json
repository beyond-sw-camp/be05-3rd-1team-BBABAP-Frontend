{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"게시물 목록\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성자\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성일\")])], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"pagination\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayedBoards, board => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: board.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(board.id), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_router_link, {\n      to: '/board/' + board.id\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(board.title), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), _createElementVNode(\"td\", null, _toDisplayString(board.author), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(board.created_date), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_5, [$data.currentPage > 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    class: \"pagination-btn\"\n  }, \"이전\")) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.totalPages, page => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: page,\n      onClick: $event => $options.setPage(page),\n      class: _normalizeClass({\n        'pagination-btn': true,\n        'active': $data.currentPage === page\n      })\n    }, _toDisplayString(page), 11 /* TEXT, CLASS, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */)), $data.currentPage < $options.totalPages ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    class: \"pagination-btn\"\n  }, \"다음\")) : _createCommentVNode(\"v-if\", true)]), _hoisted_7, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToPostForm && $options.goToPostForm(...args)),\n    class: \"add-btn\"\n  }, \"게시물 작성하기\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$options","displayedBoards","board","key","id","_toDisplayString","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","title","_","author","created_date","_hoisted_5","$data","currentPage","onClick","_cache","args","prevPage","_createCommentVNode","totalPages","page","$event","setPage","_normalizeClass","_hoisted_6","nextPage","_hoisted_7","goToPostForm"],"sources":["C:\\encore\\vsc_java_workspace\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\BoardListJsonServer.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <h2>게시물 목록</h2>\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>제목</th>\r\n            <th>작성자</th>\r\n            <th>작성일</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"board in displayedBoards\" :key=\"board.id\">\r\n            <td>{{ board.id }}</td>\r\n            <td><router-link :to=\"'/board/' + board.id\">{{ board.title }}</router-link></td>\r\n            <td>{{ board.author }}</td>\r\n            <td>{{ board.created_date }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"pagination\">\r\n        <button v-if=\"currentPage > 1\" @click=\"prevPage\" class=\"pagination-btn\">이전</button>\r\n        <button v-for=\"page in totalPages\" :key=\"page\" @click=\"setPage(page)\" :class=\"{ 'pagination-btn': true, 'active': currentPage === page }\">{{ page }}</button>\r\n        <button v-if=\"currentPage < totalPages\" @click=\"nextPage\" class=\"pagination-btn\">다음</button>\r\n      </div>\r\n      <br>\r\n      <button @click=\"goToPostForm\" class=\"add-btn\">게시물 작성하기</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        boards: [],\r\n        currentPage: 1,\r\n        perPage: 10\r\n      };\r\n    },\r\n    computed: {\r\n      totalPages() {\r\n        return Math.ceil(this.boards.length / this.perPage);\r\n      },\r\n      displayedBoards() {\r\n        const startIndex = (this.currentPage - 1) * this.perPage;\r\n        const endIndex = this.currentPage * this.perPage;\r\n        return this.boards.slice(startIndex, endIndex);\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchBoards();\r\n    },\r\n    methods: {\r\n      fetchBoards() {\r\n        axios.get('http://localhost:7777/boards')\r\n          .then(response => {\r\n            this.boards = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching boards:', error);\r\n          });\r\n      },\r\n      goToPostForm() {\r\n        this.$router.push('/post/new');\r\n      },\r\n      setPage(page) {\r\n        this.currentPage = page;\r\n      },\r\n      nextPage() {\r\n        if (this.currentPage < this.totalPages) {\r\n          this.currentPage++;\r\n        }\r\n      },\r\n      prevPage() {\r\n        if (this.currentPage > 1) {\r\n          this.currentPage--;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .container {\r\n    margin: 20px auto;\r\n    width: 80%;\r\n  }\r\n  \r\n  .table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .table th, .table td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n  \r\n  .table th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  \r\n  .pagination {\r\n    margin-top: 20px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .pagination-btn {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 8px 16px;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .pagination-btn:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .active {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .add-btn {\r\n    background-color: #008CBA;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    cursor: pointer;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .add-btn:hover {\r\n    background-color: #00698C;\r\n  }\r\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAe,YAAX,QAAM;;EACHD,KAAK,EAAC;AAAO;gCAClBC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAY,YAAR,KAAG,E;;EAYRD,KAAK,EAAC;AAAY;mBArB7B;gCA0BMC,mBAAA,CAAI;;;uBAzBNC,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,UAAe,EACfH,mBAAA,CAiBQ,SAjBRI,UAiBQ,GAhBNC,UAOQ,EACRL,mBAAA,CAOQ,iB,kBANNC,mBAAA,CAKKK,SAAA,QAlBfC,WAAA,CAa8BC,QAAA,CAAAC,eAAe,EAAxBC,KAAK;yBAAhBT,mBAAA,CAKK;MALiCU,GAAG,EAAED,KAAK,CAACE;QAC/CZ,mBAAA,CAAuB,YAAAa,gBAAA,CAAhBH,KAAK,CAACE,EAAE,kBACfZ,mBAAA,CAAgF,aAA5Ec,YAAA,CAAuEC,sBAAA;MAAzDC,EAAE,cAAcN,KAAK,CAACE;;MAfpDK,OAAA,EAAAC,QAAA,CAewD,MAAiB,CAfzEC,gBAAA,CAAAN,gBAAA,CAe2DH,KAAK,CAACU,KAAK,iB;MAftEC,CAAA;mDAgBYrB,mBAAA,CAA2B,YAAAa,gBAAA,CAApBH,KAAK,CAACY,MAAM,kBACnBtB,mBAAA,CAAiC,YAAAa,gBAAA,CAA1BH,KAAK,CAACa,YAAY,iB;sCAI/BvB,mBAAA,CAIM,OAJNwB,UAIM,GAHUC,KAAA,CAAAC,WAAW,Q,cAAzBzB,mBAAA,CAAmF;IAtB3FU,GAAA;IAsBwCgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,QAAA,CAAAsB,QAAA,IAAAtB,QAAA,CAAAsB,QAAA,IAAAD,IAAA,CAAQ;IAAE9B,KAAK,EAAC;KAAiB,IAAE,KAtBlFgC,mBAAA,iB,kBAuBQ9B,mBAAA,CAA6JK,SAAA,QAvBrKC,WAAA,CAuB+BC,QAAA,CAAAwB,UAAU,EAAlBC,IAAI;yBAAnBhC,mBAAA,CAA6J;MAAzHU,GAAG,EAAEsB,IAAI;MAAGN,OAAK,EAAAO,MAAA,IAAE1B,QAAA,CAAA2B,OAAO,CAACF,IAAI;MAAIlC,KAAK,EAvBpFqC,eAAA;QAAA;QAAA,UAuB0HX,KAAA,CAAAC,WAAW,KAAKO;MAAI;wBAAOA,IAAI,gCAvBzJI,UAAA;kCAwBsBZ,KAAA,CAAAC,WAAW,GAAGlB,QAAA,CAAAwB,UAAU,I,cAAtC/B,mBAAA,CAA4F;IAxBpGU,GAAA;IAwBiDgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,QAAA,CAAA8B,QAAA,IAAA9B,QAAA,CAAA8B,QAAA,IAAAT,IAAA,CAAQ;IAAE9B,KAAK,EAAC;KAAiB,IAAE,KAxB3FgC,mBAAA,e,GA0BMQ,UAAI,EACJvC,mBAAA,CAA+D;IAAtD2B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,QAAA,CAAAgC,YAAA,IAAAhC,QAAA,CAAAgC,YAAA,IAAAX,IAAA,CAAY;IAAE9B,KAAK,EAAC;KAAU,UAAQ,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}