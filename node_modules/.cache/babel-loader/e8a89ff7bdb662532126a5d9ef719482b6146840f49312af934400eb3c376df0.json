{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport CommentForm from '../components/CommentForm.vue';\nimport CommentList from '../components/CommentList.vue';\nimport { mapGetters } from 'vuex';\nexport default {\n  components: {\n    CommentForm,\n    CommentList\n  },\n  data() {\n    return {\n      board: {},\n      comments: []\n    };\n  },\n  created() {\n    this.fetchPost();\n    this.fetchComments();\n  },\n  computed: {\n    ...mapGetters(['userNickname']),\n    shouldShowButton() {\n      return this.board.author === this.userNickname;\n    }\n  },\n  methods: {\n    fetchPost() {\n      const boardId = this.$route.params.id;\n      axios.get(`http://localhost:7777/boards/${boardId}`).then(response => {\n        this.board = response.data;\n      }).catch(error => {\n        console.error('Error fetching post:', error);\n      });\n    },\n    fetchComments() {\n      const boardId = this.$route.params.id;\n      axios.get(`http://localhost:7777/boards/${boardId}/comments`).then(response => {\n        this.comments = response.data;\n      }).catch(error => {\n        console.error('Error fetching comments:', error);\n      });\n    },\n    deletePost() {\n      const boardId = this.$route.params.id;\n      axios.delete(`http://localhost:7777/boards/${boardId}`).then(response => {\n        console.log(response);\n        this.$router.push('/boardlist');\n      }).catch(error => {\n        console.error('Error deleting post:', error);\n      });\n    },\n    goToUpdateForm() {\n      const boardId = this.$route.params.id;\n      this.$router.push(`/update/${boardId}`);\n    },\n    handleCommentAdded() {\n      // 댓글이 추가되었을 때 실행할 작업을 여기에 작성\n      // 댓글 목록을 다시 불러오거나, 다른 필요한 작업을 수행할 수 있음\n      this.fetchComments(); // 댓글 목록을 다시 불러옴\n    },\n    formatCreatedAt(created_at) {\n      const date = new Date(created_at);\n      return `${date.getFullYear()}-${('0' + (date.getMonth() + 1)).slice(-2)}-${('0' + date.getDate()).slice(-2)} ${('0' + date.getHours()).slice(-2)}:${('0' + date.getMinutes()).slice(-2)}`;\n    }\n  }\n};","map":{"version":3,"names":["axios","CommentForm","CommentList","mapGetters","components","data","board","comments","created","fetchPost","fetchComments","computed","shouldShowButton","author","userNickname","methods","boardId","$route","params","id","get","then","response","catch","error","console","deletePost","delete","log","$router","push","goToUpdateForm","handleCommentAdded","formatCreatedAt","created_at","date","Date","getFullYear","getMonth","slice","getDate","getHours","getMinutes"],"sources":["C:\\encore\\vsc_java_workspace\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\BoardView.vue"],"sourcesContent":["<template>\r\n  <div class=\"post-details\">\r\n    <h2 class=\"post-title\">{{ board.title }}</h2>\r\n    <p>작성 시간: {{ formatCreatedAt(board.created_at) }}</p>\r\n    <p class=\"post-content\" v-html=\"board.content\"></p>\r\n    <button v-if=\"shouldShowButton\" @click=\"deletePost\">삭제</button>\r\n    <button v-if=\"shouldShowButton\" @click=\"goToUpdateForm\">수정하기</button>\r\n    \r\n    <!-- 댓글 목록 컴포넌트 -->\r\n    <CommentList :comments=\"comments\" />\r\n\r\n    <!-- 댓글 작성 폼 컴포넌트 -->\r\n    <CommentForm @comment-added=\"handleCommentAdded\" />\r\n\r\n    <router-link to=\"/boardlist\" class=\"back-link\">뒤로 가기</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport CommentForm from '../components/CommentForm.vue';\r\nimport CommentList from '../components/CommentList.vue';\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  components: {\r\n    CommentForm,\r\n    CommentList\r\n  },\r\n  data() {\r\n    return {\r\n      board: {},\r\n      comments: []\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchPost();\r\n    this.fetchComments();\r\n  },\r\n  computed: {\r\n    ...mapGetters(['userNickname']),\r\n    shouldShowButton() {\r\n      return this.board.author === this.userNickname;\r\n    }\r\n  },\r\n  methods: {\r\n    fetchPost() {\r\n      const boardId = this.$route.params.id;\r\n      axios.get(`http://localhost:7777/boards/${boardId}`)\r\n        .then(response => {\r\n          this.board = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching post:', error);\r\n        });\r\n    },\r\n    fetchComments() {\r\n      const boardId = this.$route.params.id;\r\n      axios.get(`http://localhost:7777/boards/${boardId}/comments`)\r\n        .then(response => {\r\n          this.comments = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching comments:', error);\r\n        });\r\n    },\r\n    deletePost() {\r\n      const boardId = this.$route.params.id;\r\n      axios.delete(`http://localhost:7777/boards/${boardId}`)\r\n        .then(response => {\r\n          console.log(response);\r\n          this.$router.push('/boardlist');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error deleting post:', error);\r\n        });\r\n    },\r\n    goToUpdateForm() {\r\n      const boardId = this.$route.params.id;\r\n      this.$router.push(`/update/${boardId}`);\r\n    },\r\n    handleCommentAdded() {\r\n      // 댓글이 추가되었을 때 실행할 작업을 여기에 작성\r\n      // 댓글 목록을 다시 불러오거나, 다른 필요한 작업을 수행할 수 있음\r\n      this.fetchComments(); // 댓글 목록을 다시 불러옴\r\n    },\r\n    formatCreatedAt(created_at) {\r\n      const date = new Date(created_at);\r\n      return `${date.getFullYear()}-${('0' + (date.getMonth() + 1)).slice(-2)}-${('0' + date.getDate()).slice(-2)} ${('0' + date.getHours()).slice(-2)}:${('0' + date.getMinutes()).slice(-2)}`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.post-details {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.post-title {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.post-content {\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.back-link {\r\n  display: inline-block;\r\n  color: #007bff;\r\n  text-decoration: none;\r\n  margin-top: 10px;\r\n}\r\n\r\n.back-link:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}