{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7239ca2b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"즐겨찾기 주유소 목록\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"favorite-stations-list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.favoriteStations, (station, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"favorite-station-item\"\n    }, [_createCommentVNode(\" 즐겨찾기 주유소 목록을 표시하는 코드 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"h3\", null, _toDisplayString(station.place_name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(station.address_name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(station.phone), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeFavoriteStation(index)\n    }, \"제거\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","favoriteStations","station","index","key","_createCommentVNode","_toDisplayString","place_name","address_name","phone","onClick","$event","$options","removeFavoriteStation","_hoisted_3"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\components\\FavoriteStations.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>즐겨찾기 주유소 목록</h1>\n      <ul class=\"favorite-stations-list\">\n        <li v-for=\"(station, index) in favoriteStations\" :key=\"index\" class=\"favorite-station-item\">\n          <!-- 즐겨찾기 주유소 목록을 표시하는 코드 -->\n          <div>\n            <h3>{{ station.place_name }}</h3>\n            <p>{{ station.address_name }}</p>\n            <p>{{ station.phone }}</p>\n            <button @click=\"removeFavoriteStation(index)\">제거</button>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'FavoriteStations',\n    data() {\n      return {\n        favoriteStations: [] // 즐겨찾기 주유소 목록을 저장할 배열\n      };\n    },\n    mounted() {\n      // 서버로부터 즐겨찾기 주유소 목록을 가져오는 메서드 호출\n      this.getFavoriteStations();\n    },\n    methods: {\n      // 서버로부터 즐겨찾기 주유소 목록을 가져오는 메서드\n      async getFavoriteStations() {\n        try {\n          const response = await fetch('http://localhost:3000/favorites');\n          const data = await response.json();\n          this.favoriteStations = data;\n        } catch (error) {\n          console.error('Error fetching favorite stations:', error);\n        }\n      },\n      async removeFavoriteStation(index) {\n        try {\n          const station = this.favoriteStations[index];\n          const response = await fetch(`http://localhost:3000/favorites/${station.id}`, {\n            method: 'DELETE'\n          });\n          if (response.ok) {\n            this.favoriteStations.splice(index, 1);\n          } else {\n            console.error('Failed to remove favorite station');\n          }\n        } catch (error) {\n          console.error('Error removing favorite station:', error);\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .favorite-stations-list {\n    list-style-type: none;\n    padding: 0;\n  }\n  \n  .favorite-station-item {\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    margin-bottom: 10px;\n    padding: 10px;\n  }\n  \n  .favorite-station-item div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  \n  .favorite-station-item h3 {\n    margin: 0;\n  }\n  \n  .favorite-station-item button {\n    background-color: #dc3545;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    padding: 5px 10px;\n    cursor: pointer;\n  }\n  \n  .favorite-station-item button:hover {\n    background-color: #c82333;\n  }\n  </style>\n  "],"mappings":";;gEAEMA,mBAAA,CAAoB,YAAhB,aAAW;;EACXC,KAAK,EAAC;AAAwB;mBAHxC;;uBACIC,mBAAA,CAaM,cAZJC,UAAoB,EACpBH,mBAAA,CAUK,MAVLI,UAUK,I,kBATHF,mBAAA,CAQKG,SAAA,QAZbC,WAAA,CAIuCC,KAAA,CAAAC,gBAAgB,EAJvD,CAIoBC,OAAO,EAAEC,KAAK;yBAA1BR,mBAAA,CAQK;MAR6CS,GAAG,EAAED,KAAK;MAAET,KAAK,EAAC;QAClEW,mBAAA,0BAA6B,EAC7BZ,mBAAA,CAKM,cAJJA,mBAAA,CAAiC,YAAAa,gBAAA,CAA1BJ,OAAO,CAACK,UAAU,kBACzBd,mBAAA,CAAiC,WAAAa,gBAAA,CAA3BJ,OAAO,CAACM,YAAY,kBAC1Bf,mBAAA,CAA0B,WAAAa,gBAAA,CAApBJ,OAAO,CAACO,KAAK,kBACnBhB,mBAAA,CAAyD;MAAhDiB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,qBAAqB,CAACV,KAAK;OAAG,IAAE,iBAV5DW,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}