{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:3000/users', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const users = await response.json();\n          const user = users.find(user => user.username === this.username && user.password === this.password);\n          if (user) {\n            // 로그인 성공\n            alert(`${user.nickname} 님 반갑습니다!`);\n            // 사용자의 식별자를 이용하여 첫 방문 여부 확인\n            const firstLoginKey = `firstLogin_${user.id}`;\n            const firstLogin = !localStorage.getItem(firstLoginKey);\n            if (firstLogin) {\n              // 첫 로그인 시에 모달 창 표시\n              alert(`첫 회원가입 기념 전기차 충전소 50% 쿠폰이 발급되었습니다!`);\n              // 로컬 스토리지에 첫 로그인 여부 저장\n              localStorage.setItem(firstLoginKey, 'true');\n            }\n            // 로그인 성공 시 홈페이지로 자동 이동\n            this.$router.push('/');\n            // 상단바에 닉네임 표시 및 로그아웃 버튼 추가\n            this.$store.commit('setUser', user); // Vuex 사용 시 사용자 정보 저장\n          } else {\n            // 로그인 실패\n            alert('아이디 또는 비밀번호가 틀렸습니다.');\n          }\n        } else {\n          console.error('사용자 정보를 불러오는데 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('로그인 오류:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","username","password","methods","login","response","fetch","method","headers","ok","users","json","user","find","alert","nickname","firstLoginKey","id","firstLogin","localStorage","getItem","setItem","$router","push","$store","commit","console","error"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-form\">\r\n    <h2>로그인</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <div class=\"form-group\">\r\n        <label for=\"login-username\">ID</label>\r\n        <input type=\"text\" id=\"login-username\" v-model=\"username\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"login-password\">비밀번호</label>\r\n        <input type=\"password\" id=\"login-password\" v-model=\"password\" required>\r\n      </div>\r\n      <button type=\"submit\">로그인</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n  try {\r\n    const response = await fetch('http://localhost:3000/users', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      const users = await response.json();\r\n      const user = users.find(user => user.username === this.username && user.password === this.password);\r\n      if (user) {\r\n        // 로그인 성공\r\n        alert(`${user.nickname} 님 반갑습니다!`);\r\n        // 사용자의 식별자를 이용하여 첫 방문 여부 확인\r\n        const firstLoginKey = `firstLogin_${user.id}`;\r\n        const firstLogin = !localStorage.getItem(firstLoginKey);\r\n        if (firstLogin) {\r\n          // 첫 로그인 시에 모달 창 표시\r\n          alert(`첫 회원가입 기념 전기차 충전소 50% 쿠폰이 발급되었습니다!`);\r\n          // 로컬 스토리지에 첫 로그인 여부 저장\r\n          localStorage.setItem(firstLoginKey, 'true');\r\n        }\r\n        // 로그인 성공 시 홈페이지로 자동 이동\r\n        this.$router.push('/');\r\n        // 상단바에 닉네임 표시 및 로그아웃 버튼 추가\r\n        this.$store.commit('setUser', user); // Vuex 사용 시 사용자 정보 저장\r\n      } else {\r\n        // 로그인 실패\r\n        alert('아이디 또는 비밀번호가 틀렸습니다.');\r\n      }\r\n    } else {\r\n      console.error('사용자 정보를 불러오는데 실패했습니다.');\r\n    }\r\n  } catch (error) {\r\n    console.error('로그인 오류:', error);\r\n  }\r\n}\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 필요한 스타일링은 여기에 추가하세요 */\r\n.login-form {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.login-form h2 {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-form form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.login-form .form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-form label {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.login-form input {\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.login-form button {\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\n\r\n.login-form button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";AAkBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC1DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,KAAI,GAAI,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UACnC,MAAMC,IAAG,GAAIF,KAAK,CAACG,IAAI,CAACD,IAAG,IAAKA,IAAI,CAACX,QAAO,KAAM,IAAI,CAACA,QAAO,IAAKW,IAAI,CAACV,QAAO,KAAM,IAAI,CAACA,QAAQ,CAAC;UACnG,IAAIU,IAAI,EAAE;YACR;YACAE,KAAK,CAAE,GAAEF,IAAI,CAACG,QAAQ,WAAW,CAAC;YAClC;YACA,MAAMC,aAAY,GAAK,cAAaJ,IAAI,CAACK,EAAG,EAAC;YAC7C,MAAMC,UAAS,GAAI,CAACC,YAAY,CAACC,OAAO,CAACJ,aAAa,CAAC;YACvD,IAAIE,UAAU,EAAE;cACd;cACAJ,KAAK,CAAE,oCAAmC,CAAC;cAC3C;cACAK,YAAY,CAACE,OAAO,CAACL,aAAa,EAAE,MAAM,CAAC;YAC7C;YACA;YACA,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;YACtB;YACA,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEb,IAAI,CAAC,EAAE;UACvC,OAAO;YACL;YACAE,KAAK,CAAC,qBAAqB,CAAC;UAC9B;QACF,OAAO;UACLY,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;QACxC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF;EAEE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}