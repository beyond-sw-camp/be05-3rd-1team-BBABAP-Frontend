{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\nimport $ from 'jquery';\nimport 'bootstrap';\nimport 'summernote/dist/summernote-lite.css';\nimport 'summernote/dist/summernote-lite';\nexport default {\n  data() {\n    return {\n      updatedPost: {\n        title: '',\n        content: '',\n        created_at: '',\n        // created_at, created_date, author 추가\n        created_date: '',\n        author: ''\n      }\n    };\n  },\n  created() {\n    this.fetchPost();\n  },\n  computed: {\n    ...mapGetters(['userNickname'])\n  },\n  mounted() {\n    // Summernote 초기화\n    $('#summernote').summernote({\n      height: 300,\n      // 높이 설정 (원하는 대로 조절 가능)\n      callbacks: {\n        onChange: contents => {\n          // 내용이 변경될 때마다 데이터에 저장\n          this.updatedPost.content = contents;\n        }\n      }\n    });\n  },\n  methods: {\n    fetchPost() {\n      const boardId = this.$route.params.id;\n      axios.get(`http://localhost:7777/boards/${boardId}`).then(response => {\n        // 데이터 가져올 때의 속성값 설정\n        this.updatedPost.title = response.data.title;\n        this.updatedPost.content = response.data.content;\n        this.updatedPost.created_at = response.data.created_at;\n        this.updatedPost.created_date = response.data.created_date;\n        this.updatedPost.author = response.data.author;\n        // 썸머노트 에디터에 게시물 내용 설정\n        $('#summernote').summernote('code', response.data.content);\n      }).catch(error => {\n        console.error('Error fetching post:', error);\n      });\n    },\n    submitForm() {\n      const {\n        title,\n        content,\n        created_at,\n        created_date,\n        author\n      } = this.updatedPost; // 모든 속성 추출\n      const boardId = this.$route.params.id;\n      axios.put(`http://localhost:7777/boards/${boardId}`, {\n        title,\n        content,\n        created_at,\n        created_date,\n        author\n      }).then(() => {\n        this.$router.push(`/board/${boardId}`); // 수정된 게시물로 이동\n      }).catch(error => {\n        console.error('Error updating post:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","mapGetters","$","data","updatedPost","title","content","created_at","created_date","author","created","fetchPost","computed","mounted","summernote","height","callbacks","onChange","contents","methods","boardId","$route","params","id","get","then","response","catch","error","console","submitForm","put","$router","push"],"sources":["C:\\encore\\vsc_java_workspace\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\BoardUpdate.vue"],"sourcesContent":["<template>\r\n    <div class=\"update-form-container\">\r\n        <h2>게시물 수정</h2>\r\n        <form @submit.prevent=\"submitForm\" class=\"update-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"title\">제목</label>\r\n                <input type=\"text\" id=\"title\" v-model=\"updatedPost.title\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"content\">내용</label>\r\n                <textarea id=\"summernote\" v-model=\"updatedPost.content\" required></textarea>\r\n            </div>\r\n            <button type=\"submit\" class=\"submit-button\">수정 완료</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapGetters } from 'vuex';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\nimport 'summernote/dist/summernote-lite.css';\r\nimport 'summernote/dist/summernote-lite';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            updatedPost: {\r\n                title: '',\r\n                content: '',\r\n                created_at: '', // created_at, created_date, author 추가\r\n                created_date: '',\r\n                author: ''\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchPost();\r\n    },\r\n    computed: {\r\n        ...mapGetters(['userNickname'])\r\n    },\r\n    mounted() {\r\n        // Summernote 초기화\r\n        $('#summernote').summernote({\r\n            height: 300, // 높이 설정 (원하는 대로 조절 가능)\r\n            callbacks: {\r\n                onChange: (contents) => {\r\n                    // 내용이 변경될 때마다 데이터에 저장\r\n                    this.updatedPost.content = contents;\r\n                }\r\n            }\r\n        });\r\n    },\r\n    methods: {\r\n        fetchPost() {\r\n            const boardId = this.$route.params.id;\r\n            axios.get(`http://localhost:7777/boards/${boardId}`)\r\n                .then(response => {\r\n                    // 데이터 가져올 때의 속성값 설정\r\n                    this.updatedPost.title = response.data.title;\r\n                    this.updatedPost.content = response.data.content;\r\n                    this.updatedPost.created_at = response.data.created_at;\r\n                    this.updatedPost.created_date = response.data.created_date;\r\n                    this.updatedPost.author = response.data.author;\r\n                    // 썸머노트 에디터에 게시물 내용 설정\r\n                    $('#summernote').summernote('code', response.data.content);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching post:', error);\r\n                });\r\n        },\r\n        submitForm() {\r\n            const { title, content, created_at, created_date, author } = this.updatedPost; // 모든 속성 추출\r\n            const boardId = this.$route.params.id;\r\n            axios.put(`http://localhost:7777/boards/${boardId}`, { title, content, created_at, created_date, author })\r\n                .then(() => {\r\n                    this.$router.push(`/board/${boardId}`); // 수정된 게시물로 이동\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error updating post:', error);\r\n                });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.update-form-container {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n}\r\n\r\n.update-form {\r\n    background-color: #f9f9f9;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.form-group {\r\n    margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n    display: block;\r\n    font-weight: bold;\r\n}\r\n\r\ninput[type=\"text\"],\r\ntextarea {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton.submit-button {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton.submit-button:hover {\r\n    background-color: #0056b3;\r\n}\r\n</style>"],"mappings":";AAkBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,UAAS,QAAS,MAAM;AACjC,OAAOC,CAAA,MAAO,QAAQ;AACtB,OAAO,WAAW;AAClB,OAAO,qCAAqC;AAC5C,OAAO,iCAAiC;AAExC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE,EAAE;QAAE;QAChBC,YAAY,EAAE,EAAE;QAChBC,MAAM,EAAE;MACZ;IACJ,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,SAAS,CAAC,CAAC;EACpB,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGX,UAAU,CAAC,CAAC,cAAc,CAAC;EAClC,CAAC;EACDY,OAAOA,CAAA,EAAG;IACN;IACAX,CAAC,CAAC,aAAa,CAAC,CAACY,UAAU,CAAC;MACxBC,MAAM,EAAE,GAAG;MAAE;MACbC,SAAS,EAAE;QACPC,QAAQ,EAAGC,QAAQ,IAAK;UACpB;UACA,IAAI,CAACd,WAAW,CAACE,OAAM,GAAIY,QAAQ;QACvC;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,EAAE;IACLR,SAASA,CAAA,EAAG;MACR,MAAMS,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrCvB,KAAK,CAACwB,GAAG,CAAE,gCAA+BJ,OAAQ,EAAC,EAC9CK,IAAI,CAACC,QAAO,IAAK;QACd;QACA,IAAI,CAACtB,WAAW,CAACC,KAAI,GAAIqB,QAAQ,CAACvB,IAAI,CAACE,KAAK;QAC5C,IAAI,CAACD,WAAW,CAACE,OAAM,GAAIoB,QAAQ,CAACvB,IAAI,CAACG,OAAO;QAChD,IAAI,CAACF,WAAW,CAACG,UAAS,GAAImB,QAAQ,CAACvB,IAAI,CAACI,UAAU;QACtD,IAAI,CAACH,WAAW,CAACI,YAAW,GAAIkB,QAAQ,CAACvB,IAAI,CAACK,YAAY;QAC1D,IAAI,CAACJ,WAAW,CAACK,MAAK,GAAIiB,QAAQ,CAACvB,IAAI,CAACM,MAAM;QAC9C;QACAP,CAAC,CAAC,aAAa,CAAC,CAACY,UAAU,CAAC,MAAM,EAAEY,QAAQ,CAACvB,IAAI,CAACG,OAAO,CAAC;MAC9D,CAAC,EACAqB,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACV,CAAC;IACDE,UAAUA,CAAA,EAAG;MACT,MAAM;QAAEzB,KAAK;QAAEC,OAAO;QAAEC,UAAU;QAAEC,YAAY;QAAEC;MAAO,IAAI,IAAI,CAACL,WAAW,EAAE;MAC/E,MAAMgB,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrCvB,KAAK,CAAC+B,GAAG,CAAE,gCAA+BX,OAAQ,EAAC,EAAE;QAAEf,KAAK;QAAEC,OAAO;QAAEC,UAAU;QAAEC,YAAY;QAAEC;MAAO,CAAC,EACpGgB,IAAI,CAAC,MAAM;QACR,IAAI,CAACO,OAAO,CAACC,IAAI,CAAE,UAASb,OAAQ,EAAC,CAAC,EAAE;MAC5C,CAAC,EACAO,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACV;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}