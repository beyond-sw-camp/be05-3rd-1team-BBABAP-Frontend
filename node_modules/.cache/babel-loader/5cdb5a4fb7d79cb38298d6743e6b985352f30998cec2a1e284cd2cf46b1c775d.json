{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-59cf3461\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"post-details\"\n};\nconst _hoisted_2 = {\n  class: \"post-title\"\n};\nconst _hoisted_3 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CommentList = _resolveComponent(\"CommentList\");\n  const _component_CommentForm = _resolveComponent(\"CommentForm\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString($data.board.title), 1 /* TEXT */), _createElementVNode(\"p\", {\n    class: \"post-content\",\n    innerHTML: $data.board.content\n  }, null, 8 /* PROPS */, _hoisted_3), $options.shouldShowButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.deletePost && $options.deletePost(...args))\n  }, \"삭제\")) : _createCommentVNode(\"v-if\", true), $options.shouldShowButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToUpdateForm && $options.goToUpdateForm(...args))\n  }, \"수정하기\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 댓글 목록 컴포넌트 \"), _createVNode(_component_CommentList, {\n    comments: $data.comments\n  }, null, 8 /* PROPS */, [\"comments\"]), _createCommentVNode(\" 댓글 작성 폼 컴포넌트 \"), _createVNode(_component_CommentForm, {\n    onCommentAdded: $options.fetchComments\n  }, null, 8 /* PROPS */, [\"onCommentAdded\"]), _createVNode(_component_router_link, {\n    to: \"/boardlist\",\n    class: \"back-link\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"뒤로 가기\")]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$data","board","title","innerHTML","content","_hoisted_3","$options","shouldShowButton","key","onClick","_cache","args","deletePost","_createCommentVNode","goToUpdateForm","_createVNode","_component_CommentList","comments","_component_CommentForm","onCommentAdded","fetchComments","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\BoardView.vue"],"sourcesContent":["<template>\n  <div class=\"post-details\">\n    <h2 class=\"post-title\">{{ board.title }}</h2>\n    <p class=\"post-content\" v-html=\"board.content\"></p>\n    <button v-if=\"shouldShowButton\" @click=\"deletePost\">삭제</button>\n    <button v-if=\"shouldShowButton\" @click=\"goToUpdateForm\">수정하기</button>\n    \n    <!-- 댓글 목록 컴포넌트 -->\n    <CommentList :comments=\"comments\" />\n\n    <!-- 댓글 작성 폼 컴포넌트 -->\n    <CommentForm @comment-added=\"fetchComments\" />\n\n    <router-link to=\"/boardlist\" class=\"back-link\">뒤로 가기</router-link>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport CommentForm from '../components/CommentForm.vue';\nimport CommentList from '../components/CommentList.vue';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: {\n    CommentForm,\n    CommentList\n  },\n  data() {\n    return {\n      board: {},\n      comments: []\n    };\n  },\n  created() {\n    this.fetchPost();\n    this.fetchComments();\n  },\n  computed: {\n    ...mapGetters(['userNickname']),\n    shouldShowButton() {\n      return this.board.author === this.userNickname;\n    }\n  },\n  methods: {\n    fetchPost() {\n      const boardId = this.$route.params.id;\n      axios.get(`http://localhost:7777/boards/${boardId}`)\n        .then(response => {\n          this.board = response.data;\n        })\n        .catch(error => {\n          console.error('Error fetching post:', error);\n        });\n    },\n    fetchComments() {\n      const boardId = this.$route.params.id;\n      axios.get(`http://localhost:7777/boards/${boardId}/comments`)\n        .then(response => {\n          this.comments = response.data;\n        })\n        .catch(error => {\n          console.error('Error fetching comments:', error);\n        });\n    },\n    deletePost() {\n      const boardId = this.$route.params.id;\n      axios.delete(`http://localhost:7777/boards/${boardId}`)\n        .then(response => {\n          // 게시물 삭제 후 어떤 작업을 수행할 수 있음\n          // 예: 게시물 목록으로 이동\n          console.log(response);\n          this.$router.push('/boardlist');\n        })\n        .catch(error => {\n          console.error('Error deleting post:', error);\n        });\n    },\n    goToUpdateForm() {\n      const boardId = this.$route.params.id;\n      this.$router.push(`/update/${boardId}`); // 수정 폼으로 이동\n    }\n  }\n};\n</script>\n\n<style scoped>\n.post-details {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.post-title {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.post-content {\n  font-size: 16px;\n  line-height: 1.5;\n  margin-bottom: 20px;\n}\n\n.back-link {\n  display: inline-block;\n  color: #007bff;\n  text-decoration: none;\n  margin-top: 10px;\n}\n\n.back-link:hover {\n  text-decoration: underline;\n}\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAY;mBAF1B;;;;;uBACEC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,mBAAA,CAA6C,MAA7CC,UAA6C,EAAAC,gBAAA,CAAnBC,KAAA,CAAAC,KAAK,CAACC,KAAK,kBACrCL,mBAAA,CAAmD;IAAhDH,KAAK,EAAC,cAAc;IAACS,SAAsB,EAAdH,KAAA,CAAAC,KAAK,CAACG;0BAH1CC,UAAA,GAIkBC,QAAA,CAAAC,gBAAgB,I,cAA9BZ,mBAAA,CAA+D;IAJnEa,GAAA;IAIqCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,QAAA,CAAAM,UAAA,IAAAN,QAAA,CAAAM,UAAA,IAAAD,IAAA,CAAU;KAAE,IAAE,KAJ1DE,mBAAA,gBAKkBP,QAAA,CAAAC,gBAAgB,I,cAA9BZ,mBAAA,CAAqE;IALzEa,GAAA;IAKqCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,QAAA,CAAAQ,cAAA,IAAAR,QAAA,CAAAQ,cAAA,IAAAH,IAAA,CAAc;KAAE,MAAI,KALhEE,mBAAA,gBAOIA,mBAAA,gBAAmB,EACnBE,YAAA,CAAoCC,sBAAA;IAAtBC,QAAQ,EAAEjB,KAAA,CAAAiB;EAAQ,uCAEhCJ,mBAAA,kBAAqB,EACrBE,YAAA,CAA8CG,sBAAA;IAAhCC,cAAa,EAAEb,QAAA,CAAAc;EAAa,6CAE1CL,YAAA,CAAkEM,sBAAA;IAArDC,EAAE,EAAC,YAAY;IAAC5B,KAAK,EAAC;;IAbvC6B,OAAA,EAAAC,QAAA,CAamD,MAAK,CAbxDC,gBAAA,CAamD,OAAK,E;IAbxDC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}