{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport CommentForm from '../components/CommentForm.vue';\nimport CommentList from '../components/CommentList.vue';\nimport { mapGetters } from 'vuex';\nexport default {\n  components: {\n    CommentForm,\n    CommentList\n  },\n  data() {\n    return {\n      board: {},\n      comments: []\n    };\n  },\n  created() {\n    this.fetchPost();\n    this.fetchComments();\n  },\n  computed: {\n    ...mapGetters(['userNickname']),\n    shouldShowButton() {\n      return this.board.author === this.userNickname;\n    }\n  },\n  methods: {\n    fetchPost() {\n      const boardId = this.$route.params.id;\n      axios.get(`http://localhost:7777/boards/${boardId}`).then(response => {\n        this.board = response.data;\n      }).catch(error => {\n        console.error('Error fetching post:', error);\n      });\n    },\n    fetchComments() {\n      const boardId = this.$route.params.id;\n      axios.get(`http://localhost:7777/boards/${boardId}/comments`).then(response => {\n        this.comments = response.data;\n      }).catch(error => {\n        console.error('Error fetching comments:', error);\n      });\n    },\n    deletePost() {\n      const boardId = this.$route.params.id;\n      axios.delete(`http://localhost:7777/boards/${boardId}`).then(response => {\n        // 게시물 삭제 후 어떤 작업을 수행할 수 있음\n        // 예: 게시물 목록으로 이동\n        console.log(response);\n        this.$router.push('/boardlist');\n      }).catch(error => {\n        console.error('Error deleting post:', error);\n      });\n    },\n    goToUpdateForm() {\n      const boardId = this.$route.params.id;\n      this.$router.push(`/update/${boardId}`); // 수정 폼으로 이동\n    }\n  }\n};","map":{"version":3,"names":["axios","CommentForm","CommentList","mapGetters","components","data","board","comments","created","fetchPost","fetchComments","computed","shouldShowButton","author","userNickname","methods","boardId","$route","params","id","get","then","response","catch","error","console","deletePost","delete","log","$router","push","goToUpdateForm"],"sources":["C:\\encore\\be05-3rd-1team-BBABAP-Frontend\\src\\views\\BoardView.vue"],"sourcesContent":["<template>\n  <div class=\"post-details\">\n    <h2 class=\"post-title\">{{ board.title }}</h2>\n    <p class=\"post-content\" v-html=\"board.content\"></p>\n    <button v-if=\"shouldShowButton\" @click=\"deletePost\">삭제</button>\n    <button v-if=\"shouldShowButton\" @click=\"goToUpdateForm\">수정하기</button>\n    \n    <!-- 댓글 목록 컴포넌트 -->\n    <CommentList :comments=\"comments\" />\n\n    <!-- 댓글 작성 폼 컴포넌트 -->\n    <CommentForm @comment-added=\"fetchComments\" />\n\n    <router-link to=\"/boardlist\" class=\"back-link\">뒤로 가기</router-link>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport CommentForm from '../components/CommentForm.vue';\nimport CommentList from '../components/CommentList.vue';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: {\n    CommentForm,\n    CommentList\n  },\n  data() {\n    return {\n      board: {},\n      comments: []\n    };\n  },\n  created() {\n    this.fetchPost();\n    this.fetchComments();\n  },\n  computed: {\n    ...mapGetters(['userNickname']),\n    shouldShowButton() {\n      return this.board.author === this.userNickname;\n    }\n  },\n  methods: {\n    fetchPost() {\n      const boardId = this.$route.params.id;\n      axios.get(`http://localhost:7777/boards/${boardId}`)\n        .then(response => {\n          this.board = response.data;\n        })\n        .catch(error => {\n          console.error('Error fetching post:', error);\n        });\n    },\n    fetchComments() {\n      const boardId = this.$route.params.id;\n      axios.get(`http://localhost:7777/boards/${boardId}/comments`)\n        .then(response => {\n          this.comments = response.data;\n        })\n        .catch(error => {\n          console.error('Error fetching comments:', error);\n        });\n    },\n    deletePost() {\n      const boardId = this.$route.params.id;\n      axios.delete(`http://localhost:7777/boards/${boardId}`)\n        .then(response => {\n          // 게시물 삭제 후 어떤 작업을 수행할 수 있음\n          // 예: 게시물 목록으로 이동\n          console.log(response);\n          this.$router.push('/boardlist');\n        })\n        .catch(error => {\n          console.error('Error deleting post:', error);\n        });\n    },\n    goToUpdateForm() {\n      const boardId = this.$route.params.id;\n      this.$router.push(`/update/${boardId}`); // 수정 폼으로 이동\n    }\n  }\n};\n</script>\n\n<style scoped>\n.post-details {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.post-title {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.post-content {\n  font-size: 16px;\n  line-height: 1.5;\n  margin-bottom: 20px;\n}\n\n.back-link {\n  display: inline-block;\n  color: #007bff;\n  text-decoration: none;\n  margin-top: 10px;\n}\n\n.back-link:hover {\n  text-decoration: underline;\n}\n</style>"],"mappings":";AAkBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,WAAU,MAAO,+BAA+B;AACvD,OAAOC,WAAU,MAAO,+BAA+B;AACvD,SAASC,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,UAAU,EAAE;IACVH,WAAW;IACXC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,CAAC;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;IAChB,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;IAC/BS,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACN,KAAK,CAACO,MAAK,KAAM,IAAI,CAACC,YAAY;IAChD;EACF,CAAC;EACDC,OAAO,EAAE;IACPN,SAASA,CAAA,EAAG;MACV,MAAMO,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrCnB,KAAK,CAACoB,GAAG,CAAE,gCAA+BJ,OAAQ,EAAC,EAChDK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAAChB,KAAI,GAAIgB,QAAQ,CAACjB,IAAI;MAC5B,CAAC,EACAkB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;IACN,CAAC;IACDd,aAAaA,CAAA,EAAG;MACd,MAAMM,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrCnB,KAAK,CAACoB,GAAG,CAAE,gCAA+BJ,OAAQ,WAAU,EACzDK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACf,QAAO,GAAIe,QAAQ,CAACjB,IAAI;MAC/B,CAAC,EACAkB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,MAAMV,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrCnB,KAAK,CAAC2B,MAAM,CAAE,gCAA+BX,OAAQ,EAAC,EACnDK,IAAI,CAACC,QAAO,IAAK;QAChB;QACA;QACAG,OAAO,CAACG,GAAG,CAACN,QAAQ,CAAC;QACrB,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MACjC,CAAC,EACAP,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;IACN,CAAC;IACDO,cAAcA,CAAA,EAAG;MACf,MAAMf,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrC,IAAI,CAACU,OAAO,CAACC,IAAI,CAAE,WAAUd,OAAQ,EAAC,CAAC,EAAE;IAC3C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}